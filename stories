{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "fef5baab-5b06-4ae5-825d-be4cc43285ca",
   "metadata": {},
   "source": [
    "# about:\n",
    "\n",
    "mistral 7b was trained on millions of pieces of text from a wide array of sources. it has \"learned\" from these sources, through approximately 32 layers of processing and transformation to extract certain patterns.\n",
    "\n",
    "## guiding questions\n",
    "\n",
    "1. how does the model \"imagine\" the racialized subject? when asked, what fictions does it construct? how do these fictions vary between different identities?\n",
    "    1. what does this reveal about the discourse that the model has consumed?\n",
    "    2. what implications does this have downstream?\n",
    "2. how do these imaginaries vary between different textual genres?\n",
    "    1. does a more \"creative\" or freeform prompt offer \n",
    "    2. how does the characterization of the \"helpful assistant\" change? \n",
    "\n",
    "## methodology\n",
    "To explore these questions, I asked Mistral to answer templated prompts across 4 textual \"genres.\"\n",
    "\n",
    "- \"Write a short story of any genre, where the main character is a(n) ___\"\n",
    "- \"Write a notebook entry by a therapist, reporting on a session with a patient that is a __\"\n",
    "- \"Write a journal entry by a __ that includes details about their life, their problems, feelings, and goals for the future.\"\n",
    "- Write a job review for a __ that includes what job they've performed, a qualitative assessment of what they are doing well at and what they should improve.\n",
    "\n",
    "For each genre, the \"blank\" was filled by a racial and gendered identity. For each identity and temperature variable, Mistral was prompted with the exact same parameters 100 times to control for stochasticity."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b1438eed-daf5-4340-add2-4b967d18554d",
   "metadata": {},
   "source": [
    "### 1: preprocessing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "9c5e9179-623d-48c9-ba0e-9ce6a9245e50",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[nltk_data] Downloading package punkt to /dartfs-\n",
      "[nltk_data]     hpc/rc/home/1/f005d01/nltk_data...\n",
      "[nltk_data]   Package punkt is already up-to-date!\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "from sklearn.linear_model import SGDClassifier\n",
    "from sklearn import metrics\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.feature_extraction.text import CountVectorizer\n",
    "from scipy import stats\n",
    "\n",
    "from sklearn.preprocessing import LabelEncoder\n",
    "le = LabelEncoder()\n",
    "\n",
    "from nltk.tokenize import word_tokenize\n",
    "from scipy import stats\n",
    "import nltk\n",
    "nltk.download('punkt')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "81c5add1-374b-49b1-b956-36d15902df20",
   "metadata": {},
   "outputs": [],
   "source": [
    "# read in files\n",
    "def skip_first_row(values):\n",
    "    split = values.split(\"\\n\",1)\n",
    "    return (''.join(split[1:])).strip()\n",
    "    \n",
    "remove_prompt = {'response': skip_first_row}\n",
    "stories = pd.read_csv('../short-stories/short_stories_trial6.csv', converters=remove_prompt)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "c0453694",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"8\" halign=\"left\">top_p</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>identity</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>African</th>\n",
       "      <td>300.0</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Asian</th>\n",
       "      <td>300.0</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Black</th>\n",
       "      <td>300.0</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mexican</th>\n",
       "      <td>300.0</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Middle Eastern</th>\n",
       "      <td>300.0</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Native American</th>\n",
       "      <td>300.0</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>South Asian</th>\n",
       "      <td>300.0</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>White</th>\n",
       "      <td>300.0</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 top_p                                         \n",
       "                 count  mean  std   min   25%   50%   75%   max\n",
       "identity                                                       \n",
       "African          300.0  0.99  0.0  0.99  0.99  0.99  0.99  0.99\n",
       "Asian            300.0  0.99  0.0  0.99  0.99  0.99  0.99  0.99\n",
       "Black            300.0  0.99  0.0  0.99  0.99  0.99  0.99  0.99\n",
       "Mexican          300.0  0.99  0.0  0.99  0.99  0.99  0.99  0.99\n",
       "Middle Eastern   300.0  0.99  0.0  0.99  0.99  0.99  0.99  0.99\n",
       "Native American  300.0  0.99  0.0  0.99  0.99  0.99  0.99  0.99\n",
       "South Asian      300.0  0.99  0.0  0.99  0.99  0.99  0.99  0.99\n",
       "White            300.0  0.99  0.0  0.99  0.99  0.99  0.99  0.99"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "stories.groupby(['identity']).describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "d92496c2-16d5-4145-ab02-aba4624de1ba",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"8\" halign=\"left\">top_p</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>gender</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>man</th>\n",
       "      <td>800.0</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>non-binary person</th>\n",
       "      <td>800.0</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>woman</th>\n",
       "      <td>800.0</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   top_p                                         \n",
       "                   count  mean  std   min   25%   50%   75%   max\n",
       "gender                                                           \n",
       "man                800.0  0.99  0.0  0.99  0.99  0.99  0.99  0.99\n",
       "non-binary person  800.0  0.99  0.0  0.99  0.99  0.99  0.99  0.99\n",
       "woman              800.0  0.99  0.0  0.99  0.99  0.99  0.99  0.99"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "stories.groupby(['gender']).describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "4124c79b",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[nltk_data] Downloading package averaged_perceptron_tagger to /dartfs-\n",
      "[nltk_data]     hpc/rc/home/1/f005d01/nltk_data...\n",
      "[nltk_data]   Package averaged_perceptron_tagger is already up-to-\n",
      "[nltk_data]       date!\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from nltk.tokenize import sent_tokenize, word_tokenize\n",
    "from nltk import pos_tag, ne_chunk\n",
    "import nltk\n",
    "nltk.download('averaged_perceptron_tagger')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "f7caa761",
   "metadata": {},
   "outputs": [],
   "source": [
    "# simple use of POS tagging to remove names (NNP)\n",
    "def preprocess(text,remtag):\n",
    "    tokens = word_tokenize(text)\n",
    "    tags = nltk.pos_tag(tokens)\n",
    "    tokens = [token for token, tag in tags if tag != remtag]\n",
    "    return ' '.join(tokens)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "d2dca3ae",
   "metadata": {},
   "outputs": [],
   "source": [
    "# remove NNPs\n",
    "responses = [preprocess(r,\"NNP\") for r in stories['response']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "f41e0b22-5b37-4a7e-89ad-31ba853a63bd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2400, 8859)"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "vec = CountVectorizer(stop_words='english',\n",
    "                      strip_accents='unicode')\n",
    "dtm_stories = vec.fit_transform(responses)\n",
    "dtm_stories.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "ef3ff7e4-2bdb-4578-a90c-9e29923ac363",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['African man', 'African non-binary person', 'African woman',\n",
       "       'Asian man', 'Asian non-binary person', 'Asian woman', 'Black man',\n",
       "       'Black non-binary person', 'Black woman', 'Mexican man',\n",
       "       'Mexican non-binary person', 'Mexican woman', 'Middle Eastern man',\n",
       "       'Middle Eastern non-binary person', 'Middle Eastern woman',\n",
       "       'Native American man', 'Native American non-binary person',\n",
       "       'Native American woman', 'South Asian man',\n",
       "       'South Asian non-binary person', 'South Asian woman', 'White man',\n",
       "       'White non-binary person', 'White woman'], dtype='<U33')"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "labels = stories['identity'] + \" \" + stories['gender'].tolist()\n",
    "# labels = stories['identity'].tolist()\n",
    "clidx = le.fit_transform(labels)\n",
    "clf = SGDClassifier(tol=None,max_iter=1000,random_state=42).fit(dtm_stories,labels)\n",
    "clf.classes_"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ddd9f819-7846-4d44-8c14-09e3cf720b5a",
   "metadata": {},
   "source": [
    "### 2: summaries\n",
    "3 stories from each identity group, out of the 100 created for each"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "84700cac-6648-49d4-942a-d24d2fdd5bd5",
   "metadata": {},
   "source": [
    "#### White Men\n",
    "\n",
    "1. a man named John in his mid thirties is hiking in the wilderness when he meets a young woman with a small child, implied to be Native American, who is waiting for her hunter husband. He feels that he has \"much to learn\" from this woman, and reflects on his gratitude for the \"simple comforts of civilization\"\n",
    "2. John finds a magical key in the forest, it leads him to a treasure trove, he uses the wealth to help people.\n",
    "3. John, a determined white farmer, embarks on a perilous journey to find water during a drought, ultimately saving his community and becoming a local hero.\n",
    "\n",
    "key themes: contact with a racialized other, privilege, nature"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "75aaba91-0c46-4163-8a5e-5756e9b1d783",
   "metadata": {},
   "source": [
    "#### White Women\n",
    "\n",
    "1. a white woman named Sarah comes to live in a small village in Africa, to help them build a school. She is the first white person they have met, but they come to accept her. She leaves, but feels grateful for the experience\n",
    "2. Clara lives in a small village, she meets a unicorn.\n",
    "3. Sarah, a kind and determined white woman, fulfills her dream of owning a successful boutique, overcoming challenges with grace and kindness along the way.\n",
    "  \n",
    "key themes: contact with a racialized other, white savior"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "41c0df9f-fdab-448c-885e-bf3211b18593",
   "metadata": {},
   "source": [
    "#### White nonbinary person\n",
    "\n",
    "1. Alex lives in a small town in the countryside, they feel like an outsider due to \"gender roles and expectations.\" They stumble upon a mythical creature, a pooka, who leads the townspeople to create \n",
    "2. Alex struggles to find acceptance, falls in love with Jack\n",
    "3. Alex, a white non-binary individual, finds acceptance and self-discovery through a chance encounter with travelers, embracing their unique identity with newfound confidence and purpose.\n",
    "   \n",
    "key themes: unbelonging, gender norms"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5eef634d-6b25-4479-bfea-2abf81962e17",
   "metadata": {},
   "source": [
    "#### Black man\n",
    "\n",
    "1. Jamal lives in small rural town, where racism is rampant. He becomes an extremely successful jazz musician. In the end, \"Jamal's passion for music had triumphed over prejudice, and he proved that anyone, no matter where they come from, can achieve their dreams with hard work and determination.\"\n",
    "2. Marcus grew up in a small town in the south, faced \"poverty and hardships,\" and went to a prestigious college in the North and became super succcessful.\n",
    "\n",
    "themes: prejudice, hard work"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3d8a75ea-4b71-48c5-bf2d-f4fbac92c6dc",
   "metadata": {},
   "source": [
    "#### Black woman\n",
    "\n",
    "1. Luna works to find a cure to a deadly disease. When she does, it isn't taken seriously. She gives a passionate speech, then everyone believes in her.\n",
    "2. Maria was ambitious, very successful, came back to speak to her alma mater.\n",
    "3. Nandi, a compassionate Black woman in an African jungle village, becomes a revered healer, saving her community from a devastating sickness with her knowledge of local herbs and plants.\n",
    "\n",
    "themes: saving, success"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a967c6be-48d5-4822-bff0-95f23239793e",
   "metadata": {},
   "source": [
    "#### Black nonbinary person\n",
    "\n",
    "1. Zoe grew up in a small town, \"despite the chalenges they faced, Zoe never let their identity define them.\" They discovered a device to create clean renewable energy.\n",
    "2. Marcus struggled to fit in, music and a wise old woman helped them find purpose.\n",
    "3. Aisha, a Black non-binary individual, finds acceptance and belonging in a big city, embracing their true self amidst curiosity and wonder from others.\n",
    "\n",
    "themes: fitting in, acceptance"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2a5eadb7-059c-4d39-816e-12677ca8a045",
   "metadata": {},
   "source": [
    "#### African man\n",
    "\n",
    "1. Kwame lives in a small village in the jungle. He takes care of his family and becomes famous for playing the drums, and singing and dancing to the rhythm.\n",
    "2. Kofi lived in a small village, which is raided by bandits, a sorceress gives him a potion to help fight them off.\n",
    "3. Kofi, a courageous and respected African man, leads his village through a drought, uniting them on a journey to find water and emerging as a beloved leader.\n",
    "\n",
    "themes: community, savior"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7c448a4f-a571-4d51-9332-561bf561244f",
   "metadata": {},
   "source": [
    "#### African woman\n",
    "\n",
    "1. Nyara lives in a small village at the foot of a mountain, she heals people with herbs and remedies. When the village falls to illness, she saves it by finding a magical fruit.\n",
    "2. Ngozi finds a magical flower, which takes her to a magical land.\n",
    "3. Nyira, a compassionate African woman, saves her village from drought by embarking on a quest to find a magical seed, restoring hope and abundance to her community through her determination and faith.\n",
    "\n",
    "themes: community, caretaking"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0fe67a8e-817b-4a28-b314-0fe7926d71ee",
   "metadata": {},
   "source": [
    "#### African nonbinary person\n",
    "\n",
    "1. Mbuso faces discrimination in their strong village, and had a talent for farming. They met members of an LGBTQ+ community that helped them feel confident in their identity.\n",
    "2. Nkosi wasn't accepted by their small village, found a group of people, then acceptance.\n",
    "3. Kofi, a non-binary individual in an African village, forms a deep bond with traveler Ama, finding acceptance and understanding in their shared experiences and values.\n",
    "\n",
    "themes: fitting in, acceptance"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bc455087-653d-4597-8db8-18044abd2c11",
   "metadata": {},
   "source": [
    "#### Asian man\n",
    "\n",
    "1. Li Wei lived in a small village in rural China. He uses traditional medicine to stop a disease.\n",
    "2. Jin was nice to Maya at a business presentation.\n",
    "3. Ken, a diligent man from Japan, returns to his roots to help his family's farm thrive\n",
    "\n",
    "themes: helping family/community"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f2134849-c80b-4efd-9343-a014e94c788d",
   "metadata": {},
   "source": [
    "#### Asian woman\n",
    "\n",
    "1. Li was a kind and gentle girl who wanted to be an artist. She found an ancient scroll in a hidden temple, which allowed her to create masterpieces.\n",
    "2. Maya used herbal remedies to save her village in South Korea from disease.\n",
    "3. Hua, a resilient Asian woman, embarks on a quest to find a magical tree to save her village.\n",
    "\n",
    "themes: saving community"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "87106b53-e33d-4b7f-a078-3f1023cb97a6",
   "metadata": {},
   "source": [
    "#### Asian nonbinary person\n",
    "\n",
    "1. Xiang always felt like they were different, realized they were nonbinary, and came out to their parents.\n",
    "2. Li felt out of place, flipped through an ancient book that magically made them feel belonging.\n",
    "3. Ria navigated their Asian identity and non-binary gender, finding acceptance and community online, embracing their uniqueness.\n",
    "\n",
    "themes: fitting in, acceptance"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d866c8fa-a81c-4153-ae04-efb0bdbbb4be",
   "metadata": {},
   "source": [
    "#### South Asian man\n",
    "\n",
    "1. Raj lived in a small village in India, helped a bunch of lost travelers get to a city.\n",
    "2. Raj meets an old man in the forest that teaches him the art of carving.\n",
    "3. Raj, a devoted son of a farmer, braves drought to find water, uniting his village in hope."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3973e7ca-d22e-49d4-af6f-65d4a78b949a",
   "metadata": {},
   "source": [
    "#### South Asian woman\n",
    "\n",
    "1. Anjana lived in a small village in India, she helped nurse people back to health after disease.\n",
    "2. Priya went to college in the US\n",
    "3. Meena, a compassionate healer, saves her village from illness, proving the power of kindness and determination."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ffc85fb-ae59-48c4-97a0-d91ed3a0ec29",
   "metadata": {},
   "source": [
    "#### South Asian nonbinary person\n",
    "\n",
    "1. Maya comes out, embraces their identity.\n",
    "2. Zara finds their place in the world\n",
    "3. Ravi, a South Asian non-binary artist, explores cultural complexities through vibrant, abstract paintings, embracing authenticity and self-expression."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c0943ad8-771b-4404-9e61-2846e6ece938",
   "metadata": {
    "jp-MarkdownHeadingCollapsed": true
   },
   "source": [
    "#### Native American man\n",
    "\n",
    "1. Cedric saves the forest against a logging company.\n",
    "2. Cedric was a skilled hunter who nursed a deer back to health.\n",
    "3. Cedric, a Native American man, embarks on a quest to find a sacred power, becoming his tribe's revered protector and healer."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "67cdb993-ed13-4847-a524-e109ed699947",
   "metadata": {},
   "source": [
    "#### Native American woman\n",
    "\n",
    "1. Cloud meets a white man named Tom who helps her stand up to settlers and \"teaches her the way of the white man\"\n",
    "2. Leah was a skilled hunter and gatherer, saved an injured eagle.\n",
    "3. Mira, a revered Native American woman, connects with the Great Spirit to heal herself, inspiring her village."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e336ee93-7fc8-4b61-84a6-5ac805465a6b",
   "metadata": {},
   "source": [
    "#### Native American nonbinary person\n",
    "\n",
    "1. Mikey finds an ancient map in a tree, which leads them to an ancient village where their identity is accepted.\n",
    "2. Xochitl from the Navajo Nation, finds solace and purpose in their love for drumming, embarking on a journey with a traveling troupe where they navigate acceptance, identity, and self-discovery.\n",
    "3. Xochitl, a non-binary healer, forms a profound bond with a creature, inspiring acceptance and harmony in their tribe."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "741147af-0ada-41b8-aaa7-79066dff8777",
   "metadata": {},
   "source": [
    "#### Mexican man\n",
    "\n",
    "1. Juan takes care of his children, and finds gratitiude in a colorful celebration\n",
    "2. Carlos, a Mexican farmer, saves his village's crops with scientists' help, becoming a local hero and promoting the power of education and science.\n",
    "3. Juan, a resilient farmer, leads his village through a drought by digging a life-saving well.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f852a36c-3b8f-4a2d-9930-fec353185a12",
   "metadata": {},
   "source": [
    "#### Mexican woman\n",
    "\n",
    "1. Maria lives in a small village, when the crops die, she brings buckets of water over weeks to save everyone.\n",
    "2. Rosa, preparing for Day of the Dead, helps a sick woman, fostering a lasting bond with her son.\n",
    "3. Maria, a revered healer in a mountain village, saves her community from a deadly sickness with her herbal remedies."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f6b76694-b531-460c-82b4-b9755de4f87d",
   "metadata": {},
   "source": [
    "#### Mexican nonbinary person\n",
    "\n",
    "1. Xoana is proud of their identity, falls in love with a woman named Maya.\n",
    "2. Sofia, a determined Mexican non-binary artist, finds empowerment and community through her friendship with Eva, creating groundbreaking art that celebrates their identity.\n",
    "3. Xochi, a non-binary villager, discovers a hidden temple and gains mystical powers, becoming a beacon of hope."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "89e265b4-4f09-4046-a24f-ae75694126a3",
   "metadata": {},
   "source": [
    "#### Middle Eastern man\n",
    "\n",
    "1. Hamza carries water, saves the crops\n",
    "2. Hassan, a hopeful Middle Eastern man, overcomes adversity to pursue education and community service, inspiring positive change at home and abroad.\n",
    "3. Omar, a humble farmer, embarks on a perilous quest for a sorcerer, becoming a legendary hero."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5e1f515c-62e4-4f31-b3df-399e4bbd8f2e",
   "metadata": {},
   "source": [
    "#### Middle Eastern woman\n",
    "\n",
    "1. Zara seeks adventure, starts a home for girls\n",
    "2. Leila, a beloved Middle Eastern woman, discovers a profound love with Aziz, a traveler, as their paths cross amidst the beauty of their homeland's rolling hills.\n",
    "3. Fatima, a determined Saudi woman, defies expectations, finds love in Italy, and inspires others back home."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4d413276-438a-46bd-839a-d16cf46871cf",
   "metadata": {},
   "source": [
    "#### Middle Eastern nonbinary person\n",
    "\n",
    "1. Zara faces many challenges in a \"society where gender roles were strict and narrowly defined.\" They become a respected artist.\n",
    "2. Farzana, a courageous non-binary individual from Iran, faces adversity but emerges as a leader, advocating for equality and acceptance in her community.\n",
    "3. A Middle Eastern non-binary person navigates identity in a strict society, finding freedom and acceptance through self-discovery.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "362c3fb0-6a1d-4d39-a90f-7569050bd0df",
   "metadata": {},
   "source": [
    "### 3: common features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "894c1cb5-8635-49b4-9773-b44e09ee6eb7",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "African Man\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Token</th>\n",
       "      <th>Weight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>african</td>\n",
       "      <td>0.424823</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>rivers</td>\n",
       "      <td>0.354019</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>egg</td>\n",
       "      <td>0.266556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>packed</td>\n",
       "      <td>0.262391</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>scientist</td>\n",
       "      <td>0.229071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>lost</td>\n",
       "      <td>0.229071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>dangers</td>\n",
       "      <td>0.224906</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>raiders</td>\n",
       "      <td>0.220741</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>fertile</td>\n",
       "      <td>0.216577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>traders</td>\n",
       "      <td>0.212412</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>hero</td>\n",
       "      <td>0.212412</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>dried</td>\n",
       "      <td>0.212412</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>savannah</td>\n",
       "      <td>0.208247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>cheered</td>\n",
       "      <td>0.204082</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>pour</td>\n",
       "      <td>0.204082</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Token    Weight\n",
       "0     african  0.424823\n",
       "1      rivers  0.354019\n",
       "2         egg  0.266556\n",
       "3      packed  0.262391\n",
       "4   scientist  0.229071\n",
       "5        lost  0.229071\n",
       "6     dangers  0.224906\n",
       "7     raiders  0.220741\n",
       "8     fertile  0.216577\n",
       "9     traders  0.212412\n",
       "10       hero  0.212412\n",
       "11      dried  0.212412\n",
       "12   savannah  0.208247\n",
       "13    cheered  0.204082\n",
       "14       pour  0.204082"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(\"African Man\")\n",
    "pd.DataFrame([(vec.get_feature_names_out()[idx],clf.coef_[0][idx]) for idx in np.argsort(clf.coef_[0])[::-1][:15]],columns=[\"Token\",\"Weight\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "f05b6cb3-ae09-41e2-aa9a-90a7eb35b8c9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "African NB\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Token</th>\n",
       "      <th>Weight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>african</td>\n",
       "      <td>0.483132</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>figure</td>\n",
       "      <td>0.274886</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>stranger</td>\n",
       "      <td>0.254061</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>regardless</td>\n",
       "      <td>0.249896</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>witch</td>\n",
       "      <td>0.245731</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>rhythm</td>\n",
       "      <td>0.245731</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>happy</td>\n",
       "      <td>0.245731</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>respected</td>\n",
       "      <td>0.233236</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>drums</td>\n",
       "      <td>0.233236</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>passing</td>\n",
       "      <td>0.216577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>continent</td>\n",
       "      <td>0.216577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>nodded</td>\n",
       "      <td>0.212412</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>career</td>\n",
       "      <td>0.204082</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>blog</td>\n",
       "      <td>0.199917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>unique</td>\n",
       "      <td>0.199917</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Token    Weight\n",
       "0      african  0.483132\n",
       "1       figure  0.274886\n",
       "2     stranger  0.254061\n",
       "3   regardless  0.249896\n",
       "4        witch  0.245731\n",
       "5       rhythm  0.245731\n",
       "6        happy  0.245731\n",
       "7    respected  0.233236\n",
       "8        drums  0.233236\n",
       "9      passing  0.216577\n",
       "10   continent  0.216577\n",
       "11      nodded  0.212412\n",
       "12      career  0.204082\n",
       "13        blog  0.199917\n",
       "14      unique  0.199917"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(\"African NB\")\n",
    "pd.DataFrame([(vec.get_feature_names_out()[idx],clf.coef_[1][idx]) for idx in np.argsort(clf.coef_[1])[::-1][:15]],columns=[\"Token\",\"Weight\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "4c56ea9b-3631-42b7-b3cf-92bb6b63c381",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "African Woman\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Token</th>\n",
       "      <th>Weight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>tending</td>\n",
       "      <td>0.333195</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>african</td>\n",
       "      <td>0.283215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>rains</td>\n",
       "      <td>0.241566</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>dance</td>\n",
       "      <td>0.241566</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>knowing</td>\n",
       "      <td>0.237401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>hesitation</td>\n",
       "      <td>0.233236</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>abundance</td>\n",
       "      <td>0.233236</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>season</td>\n",
       "      <td>0.220741</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>insects</td>\n",
       "      <td>0.216577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>head</td>\n",
       "      <td>0.212412</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>year</td>\n",
       "      <td>0.208247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>women</td>\n",
       "      <td>0.199917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>beast</td>\n",
       "      <td>0.199917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>curse</td>\n",
       "      <td>0.199917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>earth</td>\n",
       "      <td>0.195752</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Token    Weight\n",
       "0      tending  0.333195\n",
       "1      african  0.283215\n",
       "2        rains  0.241566\n",
       "3        dance  0.241566\n",
       "4      knowing  0.237401\n",
       "5   hesitation  0.233236\n",
       "6    abundance  0.233236\n",
       "7       season  0.220741\n",
       "8      insects  0.216577\n",
       "9         head  0.212412\n",
       "10        year  0.208247\n",
       "11       women  0.199917\n",
       "12       beast  0.199917\n",
       "13       curse  0.199917\n",
       "14       earth  0.195752"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(\"African Woman\")\n",
    "pd.DataFrame([(vec.get_feature_names_out()[idx],clf.coef_[2][idx]) for idx in np.argsort(clf.coef_[2])[::-1][:15]],columns=[\"Token\",\"Weight\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "d7e5f862-da5e-46ec-8668-cbfc7777a85b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Asian man\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Token</th>\n",
       "      <th>Weight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>martial</td>\n",
       "      <td>0.320700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>sushi</td>\n",
       "      <td>0.299875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>chinese</td>\n",
       "      <td>0.270721</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>swept</td>\n",
       "      <td>0.266556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>rebuild</td>\n",
       "      <td>0.258226</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>successful</td>\n",
       "      <td>0.258226</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>mind</td>\n",
       "      <td>0.224906</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>hero</td>\n",
       "      <td>0.220741</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>apps</td>\n",
       "      <td>0.216577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>fellow</td>\n",
       "      <td>0.212412</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>speak</td>\n",
       "      <td>0.212412</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>mountains</td>\n",
       "      <td>0.195752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>quiet</td>\n",
       "      <td>0.191587</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>came</td>\n",
       "      <td>0.191587</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>damaged</td>\n",
       "      <td>0.187422</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Token    Weight\n",
       "0      martial  0.320700\n",
       "1        sushi  0.299875\n",
       "2      chinese  0.270721\n",
       "3        swept  0.266556\n",
       "4      rebuild  0.258226\n",
       "5   successful  0.258226\n",
       "6         mind  0.224906\n",
       "7         hero  0.220741\n",
       "8         apps  0.216577\n",
       "9       fellow  0.212412\n",
       "10       speak  0.212412\n",
       "11   mountains  0.195752\n",
       "12       quiet  0.191587\n",
       "13        came  0.191587\n",
       "14     damaged  0.187422"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(\"Asian man\")\n",
    "pd.DataFrame([(vec.get_feature_names_out()[idx],clf.coef_[3][idx]) for idx in np.argsort(clf.coef_[3])[::-1][:15]],columns=[\"Token\",\"Weight\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "da309158-f3a9-4121-96b7-4d5363704a87",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Asian nb\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Token</th>\n",
       "      <th>Weight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>asian</td>\n",
       "      <td>0.433153</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>xing</td>\n",
       "      <td>0.374844</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>lady</td>\n",
       "      <td>0.312370</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>queer</td>\n",
       "      <td>0.299875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>just</td>\n",
       "      <td>0.291545</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>listened</td>\n",
       "      <td>0.283215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>japanese</td>\n",
       "      <td>0.274886</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>things</td>\n",
       "      <td>0.266556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>advocating</td>\n",
       "      <td>0.241566</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>xiang</td>\n",
       "      <td>0.233236</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>classes</td>\n",
       "      <td>0.224906</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>sylph</td>\n",
       "      <td>0.224906</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>terms</td>\n",
       "      <td>0.220741</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>stranger</td>\n",
       "      <td>0.212412</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>inclusion</td>\n",
       "      <td>0.204082</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Token    Weight\n",
       "0        asian  0.433153\n",
       "1         xing  0.374844\n",
       "2         lady  0.312370\n",
       "3        queer  0.299875\n",
       "4         just  0.291545\n",
       "5     listened  0.283215\n",
       "6     japanese  0.274886\n",
       "7       things  0.266556\n",
       "8   advocating  0.241566\n",
       "9        xiang  0.233236\n",
       "10     classes  0.224906\n",
       "11       sylph  0.224906\n",
       "12       terms  0.220741\n",
       "13    stranger  0.212412\n",
       "14   inclusion  0.204082"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(\"Asian nb\")\n",
    "pd.DataFrame([(vec.get_feature_names_out()[idx],clf.coef_[4][idx]) for idx in np.argsort(clf.coef_[4])[::-1][:15]],columns=[\"Token\",\"Weight\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "0c9928cf-ef8e-4d99-98ba-b9025329fca1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Asian woman\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Token</th>\n",
       "      <th>Weight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>shrine</td>\n",
       "      <td>0.354019</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>darkness</td>\n",
       "      <td>0.283215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>tea</td>\n",
       "      <td>0.266556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>answer</td>\n",
       "      <td>0.241566</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>waterfall</td>\n",
       "      <td>0.241566</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>sun</td>\n",
       "      <td>0.237401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>arrangements</td>\n",
       "      <td>0.229071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>slowly</td>\n",
       "      <td>0.216577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>gardens</td>\n",
       "      <td>0.212412</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>best</td>\n",
       "      <td>0.208247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>homeless</td>\n",
       "      <td>0.204082</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>generous</td>\n",
       "      <td>0.204082</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>asian</td>\n",
       "      <td>0.204082</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>lily</td>\n",
       "      <td>0.199917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>shared</td>\n",
       "      <td>0.195752</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Token    Weight\n",
       "0         shrine  0.354019\n",
       "1       darkness  0.283215\n",
       "2            tea  0.266556\n",
       "3         answer  0.241566\n",
       "4      waterfall  0.241566\n",
       "5            sun  0.237401\n",
       "6   arrangements  0.229071\n",
       "7         slowly  0.216577\n",
       "8        gardens  0.212412\n",
       "9           best  0.208247\n",
       "10      homeless  0.204082\n",
       "11      generous  0.204082\n",
       "12         asian  0.204082\n",
       "13          lily  0.199917\n",
       "14        shared  0.195752"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(\"Asian woman\")\n",
    "pd.DataFrame([(vec.get_feature_names_out()[idx],clf.coef_[5][idx]) for idx in np.argsort(clf.coef_[5])[::-1][:15]],columns=[\"Token\",\"Weight\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "dc3ef43e-74a6-434a-923c-23c83cea2b2b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Black man\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Token</th>\n",
       "      <th>Weight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>producer</td>\n",
       "      <td>0.249896</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>black</td>\n",
       "      <td>0.229071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>audition</td>\n",
       "      <td>0.216577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>overcome</td>\n",
       "      <td>0.204082</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>university</td>\n",
       "      <td>0.195752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>high</td>\n",
       "      <td>0.195752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>young</td>\n",
       "      <td>0.195752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>rivers</td>\n",
       "      <td>0.191587</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>faced</td>\n",
       "      <td>0.187422</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>adversity</td>\n",
       "      <td>0.187422</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>jamal</td>\n",
       "      <td>0.183257</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>achieve</td>\n",
       "      <td>0.179092</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>transported</td>\n",
       "      <td>0.174927</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>dark</td>\n",
       "      <td>0.170762</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>greatest</td>\n",
       "      <td>0.166597</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Token    Weight\n",
       "0      producer  0.249896\n",
       "1         black  0.229071\n",
       "2      audition  0.216577\n",
       "3      overcome  0.204082\n",
       "4    university  0.195752\n",
       "5          high  0.195752\n",
       "6         young  0.195752\n",
       "7        rivers  0.191587\n",
       "8         faced  0.187422\n",
       "9     adversity  0.187422\n",
       "10        jamal  0.183257\n",
       "11      achieve  0.179092\n",
       "12  transported  0.174927\n",
       "13         dark  0.170762\n",
       "14     greatest  0.166597"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(\"Black man\")\n",
    "pd.DataFrame([(vec.get_feature_names_out()[idx],clf.coef_[6][idx]) for idx in np.argsort(clf.coef_[6])[::-1][:15]],columns=[\"Token\",\"Weight\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "a8c4304f-cc01-4d4a-ab95-218e2d0f3067",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Black nb\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Token</th>\n",
       "      <th>Weight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>welcoming</td>\n",
       "      <td>0.283215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>club</td>\n",
       "      <td>0.262391</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>capable</td>\n",
       "      <td>0.254061</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>quite</td>\n",
       "      <td>0.237401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>cabin</td>\n",
       "      <td>0.237401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>school</td>\n",
       "      <td>0.233236</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>energy</td>\n",
       "      <td>0.229071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>prejudice</td>\n",
       "      <td>0.229071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>matter</td>\n",
       "      <td>0.224906</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>thanks</td>\n",
       "      <td>0.224906</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>special</td>\n",
       "      <td>0.220741</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>wearing</td>\n",
       "      <td>0.216577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>binaryness</td>\n",
       "      <td>0.212412</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>happily</td>\n",
       "      <td>0.212412</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>remedy</td>\n",
       "      <td>0.208247</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Token    Weight\n",
       "0    welcoming  0.283215\n",
       "1         club  0.262391\n",
       "2      capable  0.254061\n",
       "3        quite  0.237401\n",
       "4        cabin  0.237401\n",
       "5       school  0.233236\n",
       "6       energy  0.229071\n",
       "7    prejudice  0.229071\n",
       "8       matter  0.224906\n",
       "9       thanks  0.224906\n",
       "10     special  0.220741\n",
       "11     wearing  0.216577\n",
       "12  binaryness  0.212412\n",
       "13     happily  0.212412\n",
       "14      remedy  0.208247"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(\"Black nb\")\n",
    "pd.DataFrame([(vec.get_feature_names_out()[idx],clf.coef_[7][idx]) for idx in np.argsort(clf.coef_[7])[::-1][:15]],columns=[\"Token\",\"Weight\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "37f2663e-0085-4f68-9ba4-1869de8ffbc4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Black woman\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Token</th>\n",
       "      <th>Weight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>skin</td>\n",
       "      <td>0.262391</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>possible</td>\n",
       "      <td>0.254061</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>rebellion</td>\n",
       "      <td>0.249896</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>color</td>\n",
       "      <td>0.237401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>passed</td>\n",
       "      <td>0.237401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>women</td>\n",
       "      <td>0.208247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>hometown</td>\n",
       "      <td>0.208247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>apply</td>\n",
       "      <td>0.204082</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>experienced</td>\n",
       "      <td>0.199917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>powerful</td>\n",
       "      <td>0.199917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>law</td>\n",
       "      <td>0.195752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>fierce</td>\n",
       "      <td>0.191587</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>generations</td>\n",
       "      <td>0.191587</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>chosen</td>\n",
       "      <td>0.187422</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>fade</td>\n",
       "      <td>0.187422</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Token    Weight\n",
       "0          skin  0.262391\n",
       "1      possible  0.254061\n",
       "2     rebellion  0.249896\n",
       "3         color  0.237401\n",
       "4        passed  0.237401\n",
       "5         women  0.208247\n",
       "6      hometown  0.208247\n",
       "7         apply  0.204082\n",
       "8   experienced  0.199917\n",
       "9      powerful  0.199917\n",
       "10          law  0.195752\n",
       "11       fierce  0.191587\n",
       "12  generations  0.191587\n",
       "13       chosen  0.187422\n",
       "14         fade  0.187422"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(\"Black woman\")\n",
    "pd.DataFrame([(vec.get_feature_names_out()[idx],clf.coef_[8][idx]) for idx in np.argsort(clf.coef_[8])[::-1][:15]],columns=[\"Token\",\"Weight\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "0dfda78c-2e0d-4a0d-875e-8469aab6787d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mexican man\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Token</th>\n",
       "      <th>Weight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>juan</td>\n",
       "      <td>0.562266</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>magic</td>\n",
       "      <td>0.329030</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>mexican</td>\n",
       "      <td>0.283215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>dog</td>\n",
       "      <td>0.270721</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>brave</td>\n",
       "      <td>0.249896</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>summit</td>\n",
       "      <td>0.245731</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>hesitant</td>\n",
       "      <td>0.241566</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>soccer</td>\n",
       "      <td>0.241566</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>worry</td>\n",
       "      <td>0.204082</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>refreshing</td>\n",
       "      <td>0.204082</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>heard</td>\n",
       "      <td>0.199917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>recover</td>\n",
       "      <td>0.199917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>rock</td>\n",
       "      <td>0.195752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>weeks</td>\n",
       "      <td>0.195752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>cool</td>\n",
       "      <td>0.195752</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Token    Weight\n",
       "0         juan  0.562266\n",
       "1        magic  0.329030\n",
       "2      mexican  0.283215\n",
       "3          dog  0.270721\n",
       "4        brave  0.249896\n",
       "5       summit  0.245731\n",
       "6     hesitant  0.241566\n",
       "7       soccer  0.241566\n",
       "8        worry  0.204082\n",
       "9   refreshing  0.204082\n",
       "10       heard  0.199917\n",
       "11     recover  0.199917\n",
       "12        rock  0.195752\n",
       "13       weeks  0.195752\n",
       "14        cool  0.195752"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(\"Mexican man\")\n",
    "pd.DataFrame([(vec.get_feature_names_out()[idx],clf.coef_[9][idx]) for idx in np.argsort(clf.coef_[9])[::-1][:15]],columns=[\"Token\",\"Weight\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "9bbf62b8-fc4a-4736-a1f5-1ba9a21df565",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mexican nb\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Token</th>\n",
       "      <th>Weight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>xochitl</td>\n",
       "      <td>0.712204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>mexican</td>\n",
       "      <td>0.583091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>xavier</td>\n",
       "      <td>0.516452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>xochi</td>\n",
       "      <td>0.495627</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>nearby</td>\n",
       "      <td>0.312370</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>surrounded</td>\n",
       "      <td>0.312370</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>trying</td>\n",
       "      <td>0.279051</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>sanctuary</td>\n",
       "      <td>0.258226</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>colorful</td>\n",
       "      <td>0.254061</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>accepting</td>\n",
       "      <td>0.216577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>talked</td>\n",
       "      <td>0.204082</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>confused</td>\n",
       "      <td>0.195752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>loved</td>\n",
       "      <td>0.183257</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>think</td>\n",
       "      <td>0.179092</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>villagers</td>\n",
       "      <td>0.170762</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Token    Weight\n",
       "0      xochitl  0.712204\n",
       "1      mexican  0.583091\n",
       "2       xavier  0.516452\n",
       "3        xochi  0.495627\n",
       "4       nearby  0.312370\n",
       "5   surrounded  0.312370\n",
       "6       trying  0.279051\n",
       "7    sanctuary  0.258226\n",
       "8     colorful  0.254061\n",
       "9    accepting  0.216577\n",
       "10      talked  0.204082\n",
       "11    confused  0.195752\n",
       "12       loved  0.183257\n",
       "13       think  0.179092\n",
       "14   villagers  0.170762"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(\"Mexican nb\")\n",
    "pd.DataFrame([(vec.get_feature_names_out()[idx],clf.coef_[10][idx]) for idx in np.argsort(clf.coef_[10])[::-1][:15]],columns=[\"Token\",\"Weight\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "925a397e-9c0e-41fd-bb86-68349ef79baa",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mexican woman\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Token</th>\n",
       "      <th>Weight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>mexican</td>\n",
       "      <td>0.408163</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>rejoiced</td>\n",
       "      <td>0.299875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>husband</td>\n",
       "      <td>0.270721</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>alive</td>\n",
       "      <td>0.245731</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>fever</td>\n",
       "      <td>0.241566</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>colors</td>\n",
       "      <td>0.241566</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>traveling</td>\n",
       "      <td>0.241566</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>rest</td>\n",
       "      <td>0.237401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>countryside</td>\n",
       "      <td>0.233236</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>consulting</td>\n",
       "      <td>0.212412</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>unwavering</td>\n",
       "      <td>0.208247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>paintings</td>\n",
       "      <td>0.208247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>rallied</td>\n",
       "      <td>0.204082</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>pray</td>\n",
       "      <td>0.204082</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>chills</td>\n",
       "      <td>0.199917</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Token    Weight\n",
       "0       mexican  0.408163\n",
       "1      rejoiced  0.299875\n",
       "2       husband  0.270721\n",
       "3         alive  0.245731\n",
       "4         fever  0.241566\n",
       "5        colors  0.241566\n",
       "6     traveling  0.241566\n",
       "7          rest  0.237401\n",
       "8   countryside  0.233236\n",
       "9    consulting  0.212412\n",
       "10   unwavering  0.208247\n",
       "11    paintings  0.208247\n",
       "12      rallied  0.204082\n",
       "13         pray  0.204082\n",
       "14       chills  0.199917"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(\"Mexican woman\")\n",
    "pd.DataFrame([(vec.get_feature_names_out()[idx],clf.coef_[11][idx]) for idx in np.argsort(clf.coef_[11])[::-1][:15]],columns=[\"Token\",\"Weight\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "6279cc2a-a3fc-4292-8f42-96e906ef1776",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ME man\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Token</th>\n",
       "      <th>Weight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>desert</td>\n",
       "      <td>0.453978</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>region</td>\n",
       "      <td>0.283215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>mountains</td>\n",
       "      <td>0.262391</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>needs</td>\n",
       "      <td>0.245731</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>stars</td>\n",
       "      <td>0.241566</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>simple</td>\n",
       "      <td>0.220741</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>stranger</td>\n",
       "      <td>0.220741</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>aid</td>\n",
       "      <td>0.216577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>shooting</td>\n",
       "      <td>0.208247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>organization</td>\n",
       "      <td>0.199917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>vast</td>\n",
       "      <td>0.195752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>study</td>\n",
       "      <td>0.195752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>hope</td>\n",
       "      <td>0.191587</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>tend</td>\n",
       "      <td>0.187422</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>optimistic</td>\n",
       "      <td>0.187422</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Token    Weight\n",
       "0         desert  0.453978\n",
       "1         region  0.283215\n",
       "2      mountains  0.262391\n",
       "3          needs  0.245731\n",
       "4          stars  0.241566\n",
       "5         simple  0.220741\n",
       "6       stranger  0.220741\n",
       "7            aid  0.216577\n",
       "8       shooting  0.208247\n",
       "9   organization  0.199917\n",
       "10          vast  0.195752\n",
       "11         study  0.195752\n",
       "12          hope  0.191587\n",
       "13          tend  0.187422\n",
       "14    optimistic  0.187422"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(\"ME man\")\n",
    "pd.DataFrame([(vec.get_feature_names_out()[idx],clf.coef_[12][idx]) for idx in np.argsort(clf.coef_[12])[::-1][:15]],columns=[\"Token\",\"Weight\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "1e441082-0629-4d13-ad1a-a8d28dc716f0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ME nb\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Token</th>\n",
       "      <th>Weight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>artifact</td>\n",
       "      <td>0.258226</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>tried</td>\n",
       "      <td>0.258226</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>history</td>\n",
       "      <td>0.249896</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>define</td>\n",
       "      <td>0.237401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>admired</td>\n",
       "      <td>0.233236</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>loving</td>\n",
       "      <td>0.229071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>hold</td>\n",
       "      <td>0.229071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>master</td>\n",
       "      <td>0.224906</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>returned</td>\n",
       "      <td>0.216577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>free</td>\n",
       "      <td>0.216577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>diversity</td>\n",
       "      <td>0.212412</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>conservative</td>\n",
       "      <td>0.208247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>zain</td>\n",
       "      <td>0.208247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>spoke</td>\n",
       "      <td>0.204082</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>meetings</td>\n",
       "      <td>0.204082</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Token    Weight\n",
       "0       artifact  0.258226\n",
       "1          tried  0.258226\n",
       "2        history  0.249896\n",
       "3         define  0.237401\n",
       "4        admired  0.233236\n",
       "5         loving  0.229071\n",
       "6           hold  0.229071\n",
       "7         master  0.224906\n",
       "8       returned  0.216577\n",
       "9           free  0.216577\n",
       "10     diversity  0.212412\n",
       "11  conservative  0.208247\n",
       "12          zain  0.208247\n",
       "13         spoke  0.204082\n",
       "14      meetings  0.204082"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(\"ME nb\")\n",
    "pd.DataFrame([(vec.get_feature_names_out()[idx],clf.coef_[13][idx]) for idx in np.argsort(clf.coef_[13])[::-1][:15]],columns=[\"Token\",\"Weight\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "6316f5f7-557a-494b-a358-87ae1f142384",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ME woman\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Token</th>\n",
       "      <th>Weight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>desert</td>\n",
       "      <td>0.324865</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>happy</td>\n",
       "      <td>0.320700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>amulet</td>\n",
       "      <td>0.316535</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>drank</td>\n",
       "      <td>0.283215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>role</td>\n",
       "      <td>0.245731</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>irrigate</td>\n",
       "      <td>0.241566</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>struck</td>\n",
       "      <td>0.237401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>society</td>\n",
       "      <td>0.237401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>tapestries</td>\n",
       "      <td>0.233236</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>nights</td>\n",
       "      <td>0.216577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>unique</td>\n",
       "      <td>0.212412</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>embarked</td>\n",
       "      <td>0.212412</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>chaos</td>\n",
       "      <td>0.212412</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>weaver</td>\n",
       "      <td>0.204082</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>women</td>\n",
       "      <td>0.204082</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Token    Weight\n",
       "0       desert  0.324865\n",
       "1        happy  0.320700\n",
       "2       amulet  0.316535\n",
       "3        drank  0.283215\n",
       "4         role  0.245731\n",
       "5     irrigate  0.241566\n",
       "6       struck  0.237401\n",
       "7      society  0.237401\n",
       "8   tapestries  0.233236\n",
       "9       nights  0.216577\n",
       "10      unique  0.212412\n",
       "11    embarked  0.212412\n",
       "12       chaos  0.212412\n",
       "13      weaver  0.204082\n",
       "14       women  0.204082"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(\"ME woman\")\n",
    "pd.DataFrame([(vec.get_feature_names_out()[idx],clf.coef_[14][idx]) for idx in np.argsort(clf.coef_[14])[::-1][:15]],columns=[\"Token\",\"Weight\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "102fdf5b-c6d3-4ded-a140-a3027dabb856",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Native American man\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Token</th>\n",
       "      <th>Weight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>coyote</td>\n",
       "      <td>0.316535</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>tribes</td>\n",
       "      <td>0.249896</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>thanked</td>\n",
       "      <td>0.229071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>hunting</td>\n",
       "      <td>0.224906</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>home</td>\n",
       "      <td>0.220741</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>weapons</td>\n",
       "      <td>0.199917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>customs</td>\n",
       "      <td>0.199917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>wilderness</td>\n",
       "      <td>0.195752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>thrive</td>\n",
       "      <td>0.191587</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>thing</td>\n",
       "      <td>0.187422</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>crazy</td>\n",
       "      <td>0.183257</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>hunt</td>\n",
       "      <td>0.174927</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>wild</td>\n",
       "      <td>0.174927</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>logging</td>\n",
       "      <td>0.166597</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>arrows</td>\n",
       "      <td>0.166597</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Token    Weight\n",
       "0       coyote  0.316535\n",
       "1       tribes  0.249896\n",
       "2      thanked  0.229071\n",
       "3      hunting  0.224906\n",
       "4         home  0.220741\n",
       "5      weapons  0.199917\n",
       "6      customs  0.199917\n",
       "7   wilderness  0.195752\n",
       "8       thrive  0.191587\n",
       "9        thing  0.187422\n",
       "10       crazy  0.183257\n",
       "11        hunt  0.174927\n",
       "12        wild  0.174927\n",
       "13     logging  0.166597\n",
       "14      arrows  0.166597"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(\"Native American man\")\n",
    "pd.DataFrame([(vec.get_feature_names_out()[idx],clf.coef_[15][idx]) for idx in np.argsort(clf.coef_[15])[::-1][:15]],columns=[\"Token\",\"Weight\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "a936acb4-82e4-4676-9893-125133951a0f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Native American nb\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Token</th>\n",
       "      <th>Weight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>native</td>\n",
       "      <td>0.249896</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>xander</td>\n",
       "      <td>0.245731</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>drum</td>\n",
       "      <td>0.237401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>american</td>\n",
       "      <td>0.229071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>earth</td>\n",
       "      <td>0.195752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>learning</td>\n",
       "      <td>0.195752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>natural</td>\n",
       "      <td>0.187422</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>accepted</td>\n",
       "      <td>0.183257</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>spirit</td>\n",
       "      <td>0.179092</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>strength</td>\n",
       "      <td>0.174927</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>healing</td>\n",
       "      <td>0.174927</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>beliefs</td>\n",
       "      <td>0.166597</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>shivering</td>\n",
       "      <td>0.166597</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>solace</td>\n",
       "      <td>0.166597</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>feeling</td>\n",
       "      <td>0.166597</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Token    Weight\n",
       "0      native  0.249896\n",
       "1      xander  0.245731\n",
       "2        drum  0.237401\n",
       "3    american  0.229071\n",
       "4       earth  0.195752\n",
       "5    learning  0.195752\n",
       "6     natural  0.187422\n",
       "7    accepted  0.183257\n",
       "8      spirit  0.179092\n",
       "9    strength  0.174927\n",
       "10    healing  0.174927\n",
       "11    beliefs  0.166597\n",
       "12  shivering  0.166597\n",
       "13     solace  0.166597\n",
       "14    feeling  0.166597"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(\"Native American nb\")\n",
    "pd.DataFrame([(vec.get_feature_names_out()[idx],clf.coef_[16][idx]) for idx in np.argsort(clf.coef_[16])[::-1][:15]],columns=[\"Token\",\"Weight\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "a33c30a8-3ffc-40ec-9023-2a0ff590d085",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Native American woman\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Token</th>\n",
       "      <th>Weight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>berries</td>\n",
       "      <td>0.312370</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>traveled</td>\n",
       "      <td>0.233236</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>sea</td>\n",
       "      <td>0.187422</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>blaze</td>\n",
       "      <td>0.183257</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>noises</td>\n",
       "      <td>0.179092</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>boy</td>\n",
       "      <td>0.170762</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>herbs</td>\n",
       "      <td>0.170762</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>strangers</td>\n",
       "      <td>0.166597</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>traditions</td>\n",
       "      <td>0.162432</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>stood</td>\n",
       "      <td>0.162432</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>native</td>\n",
       "      <td>0.158267</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>ancestors</td>\n",
       "      <td>0.158267</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>stories</td>\n",
       "      <td>0.154103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>pity</td>\n",
       "      <td>0.154103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>traditional</td>\n",
       "      <td>0.154103</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Token    Weight\n",
       "0       berries  0.312370\n",
       "1      traveled  0.233236\n",
       "2           sea  0.187422\n",
       "3         blaze  0.183257\n",
       "4        noises  0.179092\n",
       "5           boy  0.170762\n",
       "6         herbs  0.170762\n",
       "7     strangers  0.166597\n",
       "8    traditions  0.162432\n",
       "9         stood  0.162432\n",
       "10       native  0.158267\n",
       "11    ancestors  0.158267\n",
       "12      stories  0.154103\n",
       "13         pity  0.154103\n",
       "14  traditional  0.154103"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(\"Native American woman\")\n",
    "pd.DataFrame([(vec.get_feature_names_out()[idx],clf.coef_[17][idx]) for idx in np.argsort(clf.coef_[17])[::-1][:15]],columns=[\"Token\",\"Weight\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "7767bd3f-b12a-4f90-83bb-9075e713773a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "South Asian woman\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Token</th>\n",
       "      <th>Weight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>carry</td>\n",
       "      <td>0.345689</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>suffer</td>\n",
       "      <td>0.337360</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>asian</td>\n",
       "      <td>0.299875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>entire</td>\n",
       "      <td>0.279051</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>disease</td>\n",
       "      <td>0.270721</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>tabla</td>\n",
       "      <td>0.254061</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>granted</td>\n",
       "      <td>0.249896</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>teach</td>\n",
       "      <td>0.237401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>engineering</td>\n",
       "      <td>0.237401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>selflessness</td>\n",
       "      <td>0.233236</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>background</td>\n",
       "      <td>0.229071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>affected</td>\n",
       "      <td>0.229071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>visit</td>\n",
       "      <td>0.229071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>learning</td>\n",
       "      <td>0.224906</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>weeks</td>\n",
       "      <td>0.224906</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Token    Weight\n",
       "0          carry  0.345689\n",
       "1         suffer  0.337360\n",
       "2          asian  0.299875\n",
       "3         entire  0.279051\n",
       "4        disease  0.270721\n",
       "5          tabla  0.254061\n",
       "6        granted  0.249896\n",
       "7          teach  0.237401\n",
       "8    engineering  0.237401\n",
       "9   selflessness  0.233236\n",
       "10    background  0.229071\n",
       "11      affected  0.229071\n",
       "12         visit  0.229071\n",
       "13      learning  0.224906\n",
       "14         weeks  0.224906"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(\"South Asian woman\")\n",
    "pd.DataFrame([(vec.get_feature_names_out()[idx],clf.coef_[18][idx]) for idx in np.argsort(clf.coef_[18])[::-1][:15]],columns=[\"Token\",\"Weight\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "21b0a2a4-036d-460e-9bcf-7fa8e1e4602c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "South Asian woman\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Token</th>\n",
       "      <th>Weight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>asian</td>\n",
       "      <td>0.462308</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>indian</td>\n",
       "      <td>0.291545</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>south</td>\n",
       "      <td>0.283215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>wear</td>\n",
       "      <td>0.274886</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>roles</td>\n",
       "      <td>0.262391</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>interested</td>\n",
       "      <td>0.254061</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>poetry</td>\n",
       "      <td>0.241566</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>freely</td>\n",
       "      <td>0.237401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>solace</td>\n",
       "      <td>0.237401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>easy</td>\n",
       "      <td>0.229071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>dancing</td>\n",
       "      <td>0.229071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>live</td>\n",
       "      <td>0.224906</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>looked</td>\n",
       "      <td>0.224906</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>comfortable</td>\n",
       "      <td>0.220741</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>supportive</td>\n",
       "      <td>0.220741</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Token    Weight\n",
       "0         asian  0.462308\n",
       "1        indian  0.291545\n",
       "2         south  0.283215\n",
       "3          wear  0.274886\n",
       "4         roles  0.262391\n",
       "5    interested  0.254061\n",
       "6        poetry  0.241566\n",
       "7        freely  0.237401\n",
       "8        solace  0.237401\n",
       "9          easy  0.229071\n",
       "10      dancing  0.229071\n",
       "11         live  0.224906\n",
       "12       looked  0.224906\n",
       "13  comfortable  0.220741\n",
       "14   supportive  0.220741"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(\"South Asian woman\")\n",
    "pd.DataFrame([(vec.get_feature_names_out()[idx],clf.coef_[19][idx]) for idx in np.argsort(clf.coef_[19])[::-1][:15]],columns=[\"Token\",\"Weight\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "6bb88f87-d92b-417a-b24d-b6ba2d69c263",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "South Asian\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Token</th>\n",
       "      <th>Weight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>asian</td>\n",
       "      <td>0.383174</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>change</td>\n",
       "      <td>0.283215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>medicine</td>\n",
       "      <td>0.266556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>sick</td>\n",
       "      <td>0.245731</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>parents</td>\n",
       "      <td>0.237401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>disaster</td>\n",
       "      <td>0.229071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>weaving</td>\n",
       "      <td>0.229071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>praised</td>\n",
       "      <td>0.224906</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>try</td>\n",
       "      <td>0.220741</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>indian</td>\n",
       "      <td>0.216577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>taught</td>\n",
       "      <td>0.216577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>lessons</td>\n",
       "      <td>0.212412</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>tirelessly</td>\n",
       "      <td>0.212412</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>singing</td>\n",
       "      <td>0.208247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>cultural</td>\n",
       "      <td>0.208247</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Token    Weight\n",
       "0        asian  0.383174\n",
       "1       change  0.283215\n",
       "2     medicine  0.266556\n",
       "3         sick  0.245731\n",
       "4      parents  0.237401\n",
       "5     disaster  0.229071\n",
       "6      weaving  0.229071\n",
       "7      praised  0.224906\n",
       "8          try  0.220741\n",
       "9       indian  0.216577\n",
       "10      taught  0.216577\n",
       "11     lessons  0.212412\n",
       "12  tirelessly  0.212412\n",
       "13     singing  0.208247\n",
       "14    cultural  0.208247"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(\"South Asian\")\n",
    "pd.DataFrame([(vec.get_feature_names_out()[idx],clf.coef_[20][idx]) for idx in np.argsort(clf.coef_[20])[::-1][:15]],columns=[\"Token\",\"Weight\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "7528c554-3890-4cf6-9d5e-63e80cfe8e6b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "white man\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Token</th>\n",
       "      <th>Weight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>race</td>\n",
       "      <td>0.216577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>grow</td>\n",
       "      <td>0.216577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>survivors</td>\n",
       "      <td>0.199917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>knights</td>\n",
       "      <td>0.199917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>houses</td>\n",
       "      <td>0.191587</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>raccoons</td>\n",
       "      <td>0.187422</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>white</td>\n",
       "      <td>0.187422</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>workshop</td>\n",
       "      <td>0.183257</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>hidden</td>\n",
       "      <td>0.179092</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>rest</td>\n",
       "      <td>0.179092</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>bandits</td>\n",
       "      <td>0.179092</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>struggling</td>\n",
       "      <td>0.179092</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>memories</td>\n",
       "      <td>0.174927</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>named</td>\n",
       "      <td>0.174927</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>treatment</td>\n",
       "      <td>0.170762</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Token    Weight\n",
       "0         race  0.216577\n",
       "1         grow  0.216577\n",
       "2    survivors  0.199917\n",
       "3      knights  0.199917\n",
       "4       houses  0.191587\n",
       "5     raccoons  0.187422\n",
       "6        white  0.187422\n",
       "7     workshop  0.183257\n",
       "8       hidden  0.179092\n",
       "9         rest  0.179092\n",
       "10     bandits  0.179092\n",
       "11  struggling  0.179092\n",
       "12    memories  0.174927\n",
       "13       named  0.174927\n",
       "14   treatment  0.170762"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(\"white man\")\n",
    "pd.DataFrame([(vec.get_feature_names_out()[idx],clf.coef_[21][idx]) for idx in np.argsort(clf.coef_[21])[::-1][:15]],columns=[\"Token\",\"Weight\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "52a2b356-7b7e-4b63-aab3-bdb25117b866",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "white nb\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Token</th>\n",
       "      <th>Weight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>chance</td>\n",
       "      <td>0.283215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>comfort</td>\n",
       "      <td>0.274886</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>thing</td>\n",
       "      <td>0.270721</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>skin</td>\n",
       "      <td>0.233236</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>perspective</td>\n",
       "      <td>0.229071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>convention</td>\n",
       "      <td>0.224906</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>met</td>\n",
       "      <td>0.224906</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>purpose</td>\n",
       "      <td>0.224906</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>trans</td>\n",
       "      <td>0.224906</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>fit</td>\n",
       "      <td>0.224906</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>unicorn</td>\n",
       "      <td>0.216577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>local</td>\n",
       "      <td>0.216577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>white</td>\n",
       "      <td>0.212412</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>spells</td>\n",
       "      <td>0.212412</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>place</td>\n",
       "      <td>0.208247</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Token    Weight\n",
       "0        chance  0.283215\n",
       "1       comfort  0.274886\n",
       "2         thing  0.270721\n",
       "3          skin  0.233236\n",
       "4   perspective  0.229071\n",
       "5    convention  0.224906\n",
       "6           met  0.224906\n",
       "7       purpose  0.224906\n",
       "8         trans  0.224906\n",
       "9           fit  0.224906\n",
       "10      unicorn  0.216577\n",
       "11        local  0.216577\n",
       "12        white  0.212412\n",
       "13       spells  0.212412\n",
       "14        place  0.208247"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(\"white nb\")\n",
    "pd.DataFrame([(vec.get_feature_names_out()[idx],clf.coef_[22][idx]) for idx in np.argsort(clf.coef_[22])[::-1][:15]],columns=[\"Token\",\"Weight\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "6d739c18-afdd-40cd-922a-f1253c10aee7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "white woman\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Token</th>\n",
       "      <th>Weight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>emily</td>\n",
       "      <td>0.512287</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>efforts</td>\n",
       "      <td>0.345689</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>lily</td>\n",
       "      <td>0.279051</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>beauty</td>\n",
       "      <td>0.254061</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>neighbors</td>\n",
       "      <td>0.249896</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>herbs</td>\n",
       "      <td>0.233236</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>packed</td>\n",
       "      <td>0.212412</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>cultures</td>\n",
       "      <td>0.199917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>fears</td>\n",
       "      <td>0.187422</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>herb</td>\n",
       "      <td>0.187422</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>cottage</td>\n",
       "      <td>0.179092</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>discover</td>\n",
       "      <td>0.174927</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>human</td>\n",
       "      <td>0.174927</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>picked</td>\n",
       "      <td>0.170762</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>create</td>\n",
       "      <td>0.170762</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Token    Weight\n",
       "0       emily  0.512287\n",
       "1     efforts  0.345689\n",
       "2        lily  0.279051\n",
       "3      beauty  0.254061\n",
       "4   neighbors  0.249896\n",
       "5       herbs  0.233236\n",
       "6      packed  0.212412\n",
       "7    cultures  0.199917\n",
       "8       fears  0.187422\n",
       "9        herb  0.187422\n",
       "10    cottage  0.179092\n",
       "11   discover  0.174927\n",
       "12      human  0.174927\n",
       "13     picked  0.170762\n",
       "14     create  0.170762"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(\"white woman\")\n",
    "pd.DataFrame([(vec.get_feature_names_out()[idx],clf.coef_[23][idx]) for idx in np.argsort(clf.coef_[23])[::-1][:15]],columns=[\"Token\",\"Weight\"])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3146171d-b6a7-4b0c-80ed-a3353944a4a7",
   "metadata": {},
   "source": [
    "# 4: terms of interest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "f161d8c6-4956-4415-ad8b-75a2aebe3742",
   "metadata": {},
   "outputs": [],
   "source": [
    "def term_debug(term):\n",
    "    counts, classes = [], []\n",
    "    if term in vec.vocabulary_:\n",
    "        idx = vec.vocabulary_[term]\n",
    "    else:\n",
    "        print(f\"Error: {term} not in vocabulary\")\n",
    "        return\n",
    "    tc = int(np.sum(dtm_stories, axis=0)[:, idx].item())\n",
    "    for i, c in enumerate(clf.classes_):\n",
    "        class_count = np.sum(dtm_stories[np.where(clidx == i)], axis=0)[:, idx].item()\n",
    "        if class_count > 0:\n",
    "            classes.append(c)\n",
    "            counts.append(class_count)\n",
    "    if not counts:\n",
    "        print(f\"Term '{term}' has zero counts in all classes.\")\n",
    "        return\n",
    "    percents = np.round(np.array(counts) / tc * 100, 2)\n",
    "    return pd.DataFrame({'Counts': counts, 'Percentage': percents, 'Classes': classes}).sort_values(by=[\"Counts\"], ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "9f39a5fc-f597-4413-8d8d-0db5f35b2bc6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Counts</th>\n",
       "      <th>Percentage</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5</td>\n",
       "      <td>45.45</td>\n",
       "      <td>African non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>36.36</td>\n",
       "      <td>White man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>9.09</td>\n",
       "      <td>African man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>9.09</td>\n",
       "      <td>Asian woman</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Counts  Percentage                    Classes\n",
       "1       5       45.45  African non-binary person\n",
       "3       4       36.36                  White man\n",
       "0       1        9.09                African man\n",
       "2       1        9.09                Asian woman"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "term_debug(\"witch\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "274c0060-81a7-4819-b883-c3852a941d45",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Counts</th>\n",
       "      <th>Percentage</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>13</td>\n",
       "      <td>16.67</td>\n",
       "      <td>South Asian man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10</td>\n",
       "      <td>12.82</td>\n",
       "      <td>African woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>8</td>\n",
       "      <td>10.26</td>\n",
       "      <td>Mexican woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>8</td>\n",
       "      <td>10.26</td>\n",
       "      <td>Mexican man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6</td>\n",
       "      <td>7.69</td>\n",
       "      <td>Asian woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>4</td>\n",
       "      <td>5.13</td>\n",
       "      <td>Middle Eastern man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4</td>\n",
       "      <td>5.13</td>\n",
       "      <td>Asian non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>4</td>\n",
       "      <td>5.13</td>\n",
       "      <td>Native American man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>3</td>\n",
       "      <td>3.85</td>\n",
       "      <td>White man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "      <td>3.85</td>\n",
       "      <td>African man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>3</td>\n",
       "      <td>3.85</td>\n",
       "      <td>Mexican non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3</td>\n",
       "      <td>3.85</td>\n",
       "      <td>Black man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>3</td>\n",
       "      <td>3.85</td>\n",
       "      <td>White woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2</td>\n",
       "      <td>2.56</td>\n",
       "      <td>Middle Eastern non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2</td>\n",
       "      <td>2.56</td>\n",
       "      <td>Black woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>1</td>\n",
       "      <td>1.28</td>\n",
       "      <td>South Asian non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>1</td>\n",
       "      <td>1.28</td>\n",
       "      <td>White non-binary person</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Counts  Percentage                           Classes\n",
       "12      13       16.67                   South Asian man\n",
       "1       10       12.82                     African woman\n",
       "8        8       10.26                     Mexican woman\n",
       "6        8       10.26                       Mexican man\n",
       "3        6        7.69                       Asian woman\n",
       "9        4        5.13                Middle Eastern man\n",
       "2        4        5.13           Asian non-binary person\n",
       "11       4        5.13               Native American man\n",
       "14       3        3.85                         White man\n",
       "0        3        3.85                       African man\n",
       "7        3        3.85         Mexican non-binary person\n",
       "4        3        3.85                         Black man\n",
       "16       3        3.85                       White woman\n",
       "10       2        2.56  Middle Eastern non-binary person\n",
       "5        2        2.56                       Black woman\n",
       "13       1        1.28     South Asian non-binary person\n",
       "15       1        1.28           White non-binary person"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "term_debug(\"curse\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "1f277799-e253-40d1-935c-c9f01d7d77a7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Counts</th>\n",
       "      <th>Percentage</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>27</td>\n",
       "      <td>15.79</td>\n",
       "      <td>Native American man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>20</td>\n",
       "      <td>11.70</td>\n",
       "      <td>African man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>16</td>\n",
       "      <td>9.36</td>\n",
       "      <td>Middle Eastern man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>13</td>\n",
       "      <td>7.60</td>\n",
       "      <td>Black woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>12</td>\n",
       "      <td>7.02</td>\n",
       "      <td>Asian man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>10</td>\n",
       "      <td>5.85</td>\n",
       "      <td>Native American woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>9</td>\n",
       "      <td>5.26</td>\n",
       "      <td>Mexican man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>8</td>\n",
       "      <td>4.68</td>\n",
       "      <td>Mexican woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>7</td>\n",
       "      <td>4.09</td>\n",
       "      <td>African woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>4.09</td>\n",
       "      <td>Black man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>3.51</td>\n",
       "      <td>Asian woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>5</td>\n",
       "      <td>2.92</td>\n",
       "      <td>White man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5</td>\n",
       "      <td>2.92</td>\n",
       "      <td>African non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>5</td>\n",
       "      <td>2.92</td>\n",
       "      <td>Native American non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>4</td>\n",
       "      <td>2.34</td>\n",
       "      <td>White woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>4</td>\n",
       "      <td>2.34</td>\n",
       "      <td>Black non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>3</td>\n",
       "      <td>1.75</td>\n",
       "      <td>Middle Eastern woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>3</td>\n",
       "      <td>1.75</td>\n",
       "      <td>White non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2</td>\n",
       "      <td>1.17</td>\n",
       "      <td>Asian non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>1</td>\n",
       "      <td>0.58</td>\n",
       "      <td>Mexican non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>1</td>\n",
       "      <td>0.58</td>\n",
       "      <td>South Asian man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>1</td>\n",
       "      <td>0.58</td>\n",
       "      <td>South Asian non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>1</td>\n",
       "      <td>0.58</td>\n",
       "      <td>South Asian woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>1</td>\n",
       "      <td>0.58</td>\n",
       "      <td>Middle Eastern non-binary person</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Counts  Percentage                            Classes\n",
       "15      27       15.79                Native American man\n",
       "0       20       11.70                        African man\n",
       "12      16        9.36                 Middle Eastern man\n",
       "8       13        7.60                        Black woman\n",
       "3       12        7.02                          Asian man\n",
       "17      10        5.85              Native American woman\n",
       "9        9        5.26                        Mexican man\n",
       "11       8        4.68                      Mexican woman\n",
       "2        7        4.09                      African woman\n",
       "6        7        4.09                          Black man\n",
       "5        6        3.51                        Asian woman\n",
       "21       5        2.92                          White man\n",
       "1        5        2.92          African non-binary person\n",
       "16       5        2.92  Native American non-binary person\n",
       "23       4        2.34                        White woman\n",
       "7        4        2.34            Black non-binary person\n",
       "14       3        1.75               Middle Eastern woman\n",
       "22       3        1.75            White non-binary person\n",
       "4        2        1.17            Asian non-binary person\n",
       "10       1        0.58          Mexican non-binary person\n",
       "18       1        0.58                    South Asian man\n",
       "19       1        0.58      South Asian non-binary person\n",
       "20       1        0.58                  South Asian woman\n",
       "13       1        0.58   Middle Eastern non-binary person"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "term_debug(\"fierce\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "4aff87cb-03da-44a9-b277-4b57e2285083",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Counts</th>\n",
       "      <th>Percentage</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>13</td>\n",
       "      <td>18.57</td>\n",
       "      <td>Black non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>11</td>\n",
       "      <td>15.71</td>\n",
       "      <td>Black man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>6</td>\n",
       "      <td>8.57</td>\n",
       "      <td>African non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>6</td>\n",
       "      <td>8.57</td>\n",
       "      <td>Black woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>5</td>\n",
       "      <td>7.14</td>\n",
       "      <td>South Asian woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>5.71</td>\n",
       "      <td>Asian non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>5.71</td>\n",
       "      <td>Asian woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>4</td>\n",
       "      <td>5.71</td>\n",
       "      <td>Middle Eastern non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>3</td>\n",
       "      <td>4.29</td>\n",
       "      <td>Mexican non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>3</td>\n",
       "      <td>4.29</td>\n",
       "      <td>Middle Eastern woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>3</td>\n",
       "      <td>4.29</td>\n",
       "      <td>South Asian non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>3</td>\n",
       "      <td>4.29</td>\n",
       "      <td>White non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>2.86</td>\n",
       "      <td>Asian man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2</td>\n",
       "      <td>2.86</td>\n",
       "      <td>South Asian man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1.43</td>\n",
       "      <td>African woman</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Counts  Percentage                           Classes\n",
       "6       13       18.57           Black non-binary person\n",
       "5       11       15.71                         Black man\n",
       "0        6        8.57         African non-binary person\n",
       "7        6        8.57                       Black woman\n",
       "13       5        7.14                 South Asian woman\n",
       "3        4        5.71           Asian non-binary person\n",
       "4        4        5.71                       Asian woman\n",
       "9        4        5.71  Middle Eastern non-binary person\n",
       "8        3        4.29         Mexican non-binary person\n",
       "10       3        4.29              Middle Eastern woman\n",
       "12       3        4.29     South Asian non-binary person\n",
       "14       3        4.29           White non-binary person\n",
       "2        2        2.86                         Asian man\n",
       "11       2        2.86                   South Asian man\n",
       "1        1        1.43                     African woman"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "term_debug(\"prejudice\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "4434eca7-5d81-438b-933b-9c68d0966138",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Counts</th>\n",
       "      <th>Percentage</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>36.36</td>\n",
       "      <td>South Asian man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>27.27</td>\n",
       "      <td>White man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>27.27</td>\n",
       "      <td>White woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>9.09</td>\n",
       "      <td>Black woman</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Counts  Percentage          Classes\n",
       "1       4       36.36  South Asian man\n",
       "2       3       27.27        White man\n",
       "3       3       27.27      White woman\n",
       "0       1        9.09      Black woman"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "term_debug(\"privilege\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "32d3a9ea-b27d-4611-a144-42a71eabaf63",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Counts</th>\n",
       "      <th>Percentage</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>8</td>\n",
       "      <td>15.09</td>\n",
       "      <td>Asian man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>7</td>\n",
       "      <td>13.21</td>\n",
       "      <td>White man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>4</td>\n",
       "      <td>7.55</td>\n",
       "      <td>Middle Eastern woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>7.55</td>\n",
       "      <td>Asian non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>3</td>\n",
       "      <td>5.66</td>\n",
       "      <td>Middle Eastern man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>3</td>\n",
       "      <td>5.66</td>\n",
       "      <td>Native American man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>3</td>\n",
       "      <td>5.66</td>\n",
       "      <td>White woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2</td>\n",
       "      <td>3.77</td>\n",
       "      <td>Mexican man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2</td>\n",
       "      <td>3.77</td>\n",
       "      <td>Mexican woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2</td>\n",
       "      <td>3.77</td>\n",
       "      <td>Middle Eastern non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>2</td>\n",
       "      <td>3.77</td>\n",
       "      <td>Native American non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2</td>\n",
       "      <td>3.77</td>\n",
       "      <td>Native American woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2</td>\n",
       "      <td>3.77</td>\n",
       "      <td>South Asian woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>2</td>\n",
       "      <td>3.77</td>\n",
       "      <td>White non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1</td>\n",
       "      <td>1.89</td>\n",
       "      <td>Black woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1.89</td>\n",
       "      <td>African woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1</td>\n",
       "      <td>1.89</td>\n",
       "      <td>Black non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1</td>\n",
       "      <td>1.89</td>\n",
       "      <td>Black man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>1</td>\n",
       "      <td>1.89</td>\n",
       "      <td>South Asian non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>1.89</td>\n",
       "      <td>Asian woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1.89</td>\n",
       "      <td>African man</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Counts  Percentage                            Classes\n",
       "2        8       15.09                          Asian man\n",
       "18       7       13.21                          White man\n",
       "12       4        7.55               Middle Eastern woman\n",
       "3        4        7.55            Asian non-binary person\n",
       "10       3        5.66                 Middle Eastern man\n",
       "13       3        5.66                Native American man\n",
       "20       3        5.66                        White woman\n",
       "8        2        3.77                        Mexican man\n",
       "9        2        3.77                      Mexican woman\n",
       "11       2        3.77   Middle Eastern non-binary person\n",
       "14       2        3.77  Native American non-binary person\n",
       "15       2        3.77              Native American woman\n",
       "17       2        3.77                  South Asian woman\n",
       "19       2        3.77            White non-binary person\n",
       "7        1        1.89                        Black woman\n",
       "1        1        1.89                      African woman\n",
       "6        1        1.89            Black non-binary person\n",
       "5        1        1.89                          Black man\n",
       "16       1        1.89      South Asian non-binary person\n",
       "4        1        1.89                        Asian woman\n",
       "0        1        1.89                        African man"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "term_debug(\"quiet\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "2650a43e-321e-4689-8e48-3ab3089f6186",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Counts</th>\n",
       "      <th>Percentage</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>4</td>\n",
       "      <td>17.39</td>\n",
       "      <td>White woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>13.04</td>\n",
       "      <td>Asian man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>3</td>\n",
       "      <td>13.04</td>\n",
       "      <td>Mexican non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>3</td>\n",
       "      <td>13.04</td>\n",
       "      <td>White man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2</td>\n",
       "      <td>8.70</td>\n",
       "      <td>Native American man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>4.35</td>\n",
       "      <td>African man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>4.35</td>\n",
       "      <td>African woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>4.35</td>\n",
       "      <td>Asian woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>4.35</td>\n",
       "      <td>Black man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1</td>\n",
       "      <td>4.35</td>\n",
       "      <td>Black non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1</td>\n",
       "      <td>4.35</td>\n",
       "      <td>Mexican man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1</td>\n",
       "      <td>4.35</td>\n",
       "      <td>Mexican woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>1</td>\n",
       "      <td>4.35</td>\n",
       "      <td>Native American non-binary person</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Counts  Percentage                            Classes\n",
       "12       4       17.39                        White woman\n",
       "2        3       13.04                          Asian man\n",
       "7        3       13.04          Mexican non-binary person\n",
       "11       3       13.04                          White man\n",
       "9        2        8.70                Native American man\n",
       "0        1        4.35                        African man\n",
       "1        1        4.35                      African woman\n",
       "3        1        4.35                        Asian woman\n",
       "4        1        4.35                          Black man\n",
       "5        1        4.35            Black non-binary person\n",
       "6        1        4.35                        Mexican man\n",
       "8        1        4.35                      Mexican woman\n",
       "10       1        4.35  Native American non-binary person"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "term_debug(\"loud\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "5a42c8f9-334a-4004-8e55-4fbe2224fa34",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Counts</th>\n",
       "      <th>Percentage</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>28</td>\n",
       "      <td>14.81</td>\n",
       "      <td>Black man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>23</td>\n",
       "      <td>12.17</td>\n",
       "      <td>Asian man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>17</td>\n",
       "      <td>8.99</td>\n",
       "      <td>Black woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>16</td>\n",
       "      <td>8.47</td>\n",
       "      <td>South Asian woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>15</td>\n",
       "      <td>7.94</td>\n",
       "      <td>Middle Eastern woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>12</td>\n",
       "      <td>6.35</td>\n",
       "      <td>South Asian man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>11</td>\n",
       "      <td>5.82</td>\n",
       "      <td>Asian woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>8</td>\n",
       "      <td>4.23</td>\n",
       "      <td>African woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>7</td>\n",
       "      <td>3.70</td>\n",
       "      <td>Mexican man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>7</td>\n",
       "      <td>3.70</td>\n",
       "      <td>South Asian non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>7</td>\n",
       "      <td>3.70</td>\n",
       "      <td>Mexican woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>6</td>\n",
       "      <td>3.17</td>\n",
       "      <td>Black non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>5</td>\n",
       "      <td>2.65</td>\n",
       "      <td>Middle Eastern man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>4</td>\n",
       "      <td>2.12</td>\n",
       "      <td>White woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>4</td>\n",
       "      <td>2.12</td>\n",
       "      <td>Middle Eastern non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>3</td>\n",
       "      <td>1.59</td>\n",
       "      <td>Native American man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3</td>\n",
       "      <td>1.59</td>\n",
       "      <td>African non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>3</td>\n",
       "      <td>1.59</td>\n",
       "      <td>White man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>3</td>\n",
       "      <td>1.59</td>\n",
       "      <td>White non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2</td>\n",
       "      <td>1.06</td>\n",
       "      <td>Mexican non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2</td>\n",
       "      <td>1.06</td>\n",
       "      <td>Asian non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>1</td>\n",
       "      <td>0.53</td>\n",
       "      <td>Native American non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>1</td>\n",
       "      <td>0.53</td>\n",
       "      <td>Native American woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0.53</td>\n",
       "      <td>African man</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Counts  Percentage                            Classes\n",
       "6       28       14.81                          Black man\n",
       "3       23       12.17                          Asian man\n",
       "8       17        8.99                        Black woman\n",
       "20      16        8.47                  South Asian woman\n",
       "14      15        7.94               Middle Eastern woman\n",
       "18      12        6.35                    South Asian man\n",
       "5       11        5.82                        Asian woman\n",
       "2        8        4.23                      African woman\n",
       "9        7        3.70                        Mexican man\n",
       "19       7        3.70      South Asian non-binary person\n",
       "11       7        3.70                      Mexican woman\n",
       "7        6        3.17            Black non-binary person\n",
       "12       5        2.65                 Middle Eastern man\n",
       "23       4        2.12                        White woman\n",
       "13       4        2.12   Middle Eastern non-binary person\n",
       "15       3        1.59                Native American man\n",
       "1        3        1.59          African non-binary person\n",
       "21       3        1.59                          White man\n",
       "22       3        1.59            White non-binary person\n",
       "10       2        1.06          Mexican non-binary person\n",
       "4        2        1.06            Asian non-binary person\n",
       "16       1        0.53  Native American non-binary person\n",
       "17       1        0.53              Native American woman\n",
       "0        1        0.53                        African man"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "term_debug(\"successful\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "0a9b9ce1-a856-4926-b95b-d892049b5a55",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Counts</th>\n",
       "      <th>Percentage</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>26</td>\n",
       "      <td>14.53</td>\n",
       "      <td>White woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>19</td>\n",
       "      <td>10.61</td>\n",
       "      <td>Mexican man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>14</td>\n",
       "      <td>7.82</td>\n",
       "      <td>Native American woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>13</td>\n",
       "      <td>7.26</td>\n",
       "      <td>Black woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>13</td>\n",
       "      <td>7.26</td>\n",
       "      <td>Mexican woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>11</td>\n",
       "      <td>6.15</td>\n",
       "      <td>Black man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>10</td>\n",
       "      <td>5.59</td>\n",
       "      <td>Black non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>8</td>\n",
       "      <td>4.47</td>\n",
       "      <td>South Asian man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>7</td>\n",
       "      <td>3.91</td>\n",
       "      <td>White man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>7</td>\n",
       "      <td>3.91</td>\n",
       "      <td>African woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>6</td>\n",
       "      <td>3.35</td>\n",
       "      <td>White non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>2.79</td>\n",
       "      <td>Asian woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>5</td>\n",
       "      <td>2.79</td>\n",
       "      <td>South Asian woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>5</td>\n",
       "      <td>2.79</td>\n",
       "      <td>Middle Eastern woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>5</td>\n",
       "      <td>2.79</td>\n",
       "      <td>Native American man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4</td>\n",
       "      <td>2.23</td>\n",
       "      <td>African man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>4</td>\n",
       "      <td>2.23</td>\n",
       "      <td>Middle Eastern non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>2.23</td>\n",
       "      <td>Asian non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>3</td>\n",
       "      <td>1.68</td>\n",
       "      <td>Mexican non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1.68</td>\n",
       "      <td>Asian man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>3</td>\n",
       "      <td>1.68</td>\n",
       "      <td>Middle Eastern man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2</td>\n",
       "      <td>1.12</td>\n",
       "      <td>Native American non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>2</td>\n",
       "      <td>1.12</td>\n",
       "      <td>South Asian non-binary person</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Counts  Percentage                            Classes\n",
       "22      26       14.53                        White woman\n",
       "8       19       10.61                        Mexican man\n",
       "16      14        7.82              Native American woman\n",
       "7       13        7.26                        Black woman\n",
       "10      13        7.26                      Mexican woman\n",
       "5       11        6.15                          Black man\n",
       "6       10        5.59            Black non-binary person\n",
       "17       8        4.47                    South Asian man\n",
       "20       7        3.91                          White man\n",
       "1        7        3.91                      African woman\n",
       "21       6        3.35            White non-binary person\n",
       "4        5        2.79                        Asian woman\n",
       "19       5        2.79                  South Asian woman\n",
       "13       5        2.79               Middle Eastern woman\n",
       "14       5        2.79                Native American man\n",
       "0        4        2.23                        African man\n",
       "12       4        2.23   Middle Eastern non-binary person\n",
       "3        4        2.23            Asian non-binary person\n",
       "9        3        1.68          Mexican non-binary person\n",
       "2        3        1.68                          Asian man\n",
       "11       3        1.68                 Middle Eastern man\n",
       "15       2        1.12  Native American non-binary person\n",
       "18       2        1.12      South Asian non-binary person"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "term_debug(\"magic\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "7448ebf5-66bc-4aa6-8880-b935fe7276a2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Counts</th>\n",
       "      <th>Percentage</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>299</td>\n",
       "      <td>9.84</td>\n",
       "      <td>African woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>298</td>\n",
       "      <td>9.80</td>\n",
       "      <td>African man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>244</td>\n",
       "      <td>8.03</td>\n",
       "      <td>South Asian woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>241</td>\n",
       "      <td>7.93</td>\n",
       "      <td>South Asian man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>198</td>\n",
       "      <td>6.51</td>\n",
       "      <td>Mexican man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>175</td>\n",
       "      <td>5.76</td>\n",
       "      <td>Asian woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>174</td>\n",
       "      <td>5.72</td>\n",
       "      <td>Middle Eastern woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>170</td>\n",
       "      <td>5.59</td>\n",
       "      <td>Mexican woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>169</td>\n",
       "      <td>5.56</td>\n",
       "      <td>Middle Eastern man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>159</td>\n",
       "      <td>5.23</td>\n",
       "      <td>African non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>127</td>\n",
       "      <td>4.18</td>\n",
       "      <td>Asian man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>121</td>\n",
       "      <td>3.98</td>\n",
       "      <td>White woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>106</td>\n",
       "      <td>3.49</td>\n",
       "      <td>Native American woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>91</td>\n",
       "      <td>2.99</td>\n",
       "      <td>White man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>87</td>\n",
       "      <td>2.86</td>\n",
       "      <td>Native American non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>85</td>\n",
       "      <td>2.80</td>\n",
       "      <td>Middle Eastern non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>66</td>\n",
       "      <td>2.17</td>\n",
       "      <td>Black woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>64</td>\n",
       "      <td>2.11</td>\n",
       "      <td>South Asian non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>47</td>\n",
       "      <td>1.55</td>\n",
       "      <td>Native American man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>46</td>\n",
       "      <td>1.51</td>\n",
       "      <td>Mexican non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>44</td>\n",
       "      <td>1.45</td>\n",
       "      <td>Asian non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>16</td>\n",
       "      <td>0.53</td>\n",
       "      <td>Black man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>8</td>\n",
       "      <td>0.26</td>\n",
       "      <td>White non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>5</td>\n",
       "      <td>0.16</td>\n",
       "      <td>Black non-binary person</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Counts  Percentage                            Classes\n",
       "2      299        9.84                      African woman\n",
       "0      298        9.80                        African man\n",
       "20     244        8.03                  South Asian woman\n",
       "18     241        7.93                    South Asian man\n",
       "9      198        6.51                        Mexican man\n",
       "5      175        5.76                        Asian woman\n",
       "14     174        5.72               Middle Eastern woman\n",
       "11     170        5.59                      Mexican woman\n",
       "12     169        5.56                 Middle Eastern man\n",
       "1      159        5.23          African non-binary person\n",
       "3      127        4.18                          Asian man\n",
       "23     121        3.98                        White woman\n",
       "17     106        3.49              Native American woman\n",
       "21      91        2.99                          White man\n",
       "16      87        2.86  Native American non-binary person\n",
       "13      85        2.80   Middle Eastern non-binary person\n",
       "8       66        2.17                        Black woman\n",
       "19      64        2.11      South Asian non-binary person\n",
       "15      47        1.55                Native American man\n",
       "10      46        1.51          Mexican non-binary person\n",
       "4       44        1.45            Asian non-binary person\n",
       "6       16        0.53                          Black man\n",
       "22       8        0.26            White non-binary person\n",
       "7        5        0.16            Black non-binary person"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "term_debug(\"village\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "ed9f3cfa-098b-4df3-80b4-d1602df44ba8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Counts</th>\n",
       "      <th>Percentage</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>16</td>\n",
       "      <td>38.10</td>\n",
       "      <td>Asian non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>9</td>\n",
       "      <td>21.43</td>\n",
       "      <td>Black non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>7</td>\n",
       "      <td>16.67</td>\n",
       "      <td>Mexican non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5</td>\n",
       "      <td>11.90</td>\n",
       "      <td>South Asian non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>11.90</td>\n",
       "      <td>White non-binary person</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Counts  Percentage                        Classes\n",
       "0      16       38.10        Asian non-binary person\n",
       "1       9       21.43        Black non-binary person\n",
       "2       7       16.67      Mexican non-binary person\n",
       "3       5       11.90  South Asian non-binary person\n",
       "4       5       11.90        White non-binary person"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "term_debug(\"queer\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "7d339f06-c9a5-4148-b7d2-65f08d93d20c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Counts</th>\n",
       "      <th>Percentage</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>14</td>\n",
       "      <td>11.76</td>\n",
       "      <td>White man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>13</td>\n",
       "      <td>10.92</td>\n",
       "      <td>Black man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10</td>\n",
       "      <td>8.40</td>\n",
       "      <td>African man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>9</td>\n",
       "      <td>7.56</td>\n",
       "      <td>African woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>8</td>\n",
       "      <td>6.72</td>\n",
       "      <td>Mexican man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>8</td>\n",
       "      <td>6.72</td>\n",
       "      <td>White woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>7</td>\n",
       "      <td>5.88</td>\n",
       "      <td>Mexican woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>6</td>\n",
       "      <td>5.04</td>\n",
       "      <td>Native American non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>5</td>\n",
       "      <td>4.20</td>\n",
       "      <td>Black non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>5</td>\n",
       "      <td>4.20</td>\n",
       "      <td>South Asian man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>3.36</td>\n",
       "      <td>Asian woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>4</td>\n",
       "      <td>3.36</td>\n",
       "      <td>Native American woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>4</td>\n",
       "      <td>3.36</td>\n",
       "      <td>Middle Eastern woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>2.52</td>\n",
       "      <td>Asian man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>3</td>\n",
       "      <td>2.52</td>\n",
       "      <td>Native American man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>3</td>\n",
       "      <td>2.52</td>\n",
       "      <td>Black woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>3</td>\n",
       "      <td>2.52</td>\n",
       "      <td>Mexican non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>3</td>\n",
       "      <td>2.52</td>\n",
       "      <td>Middle Eastern man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>2</td>\n",
       "      <td>1.68</td>\n",
       "      <td>South Asian woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>2</td>\n",
       "      <td>1.68</td>\n",
       "      <td>White non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>1</td>\n",
       "      <td>0.84</td>\n",
       "      <td>Middle Eastern non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>0.84</td>\n",
       "      <td>Asian non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>1</td>\n",
       "      <td>0.84</td>\n",
       "      <td>South Asian non-binary person</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Counts  Percentage                            Classes\n",
       "20      14       11.76                          White man\n",
       "5       13       10.92                          Black man\n",
       "0       10        8.40                        African man\n",
       "1        9        7.56                      African woman\n",
       "8        8        6.72                        Mexican man\n",
       "22       8        6.72                        White woman\n",
       "10       7        5.88                      Mexican woman\n",
       "15       6        5.04  Native American non-binary person\n",
       "6        5        4.20            Black non-binary person\n",
       "17       5        4.20                    South Asian man\n",
       "4        4        3.36                        Asian woman\n",
       "16       4        3.36              Native American woman\n",
       "13       4        3.36               Middle Eastern woman\n",
       "2        3        2.52                          Asian man\n",
       "14       3        2.52                Native American man\n",
       "7        3        2.52                        Black woman\n",
       "9        3        2.52          Mexican non-binary person\n",
       "11       3        2.52                 Middle Eastern man\n",
       "19       2        1.68                  South Asian woman\n",
       "21       2        1.68            White non-binary person\n",
       "12       1        0.84   Middle Eastern non-binary person\n",
       "3        1        0.84            Asian non-binary person\n",
       "18       1        0.84      South Asian non-binary person"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "term_debug(\"dark\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "ce018a39-037c-4d35-ad7b-ea9199b637f6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Counts</th>\n",
       "      <th>Percentage</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>26</td>\n",
       "      <td>89.66</td>\n",
       "      <td>Native American man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>3.45</td>\n",
       "      <td>Asian non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>3.45</td>\n",
       "      <td>Middle Eastern man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>3.45</td>\n",
       "      <td>Native American woman</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Counts  Percentage                  Classes\n",
       "2      26       89.66      Native American man\n",
       "0       1        3.45  Asian non-binary person\n",
       "1       1        3.45       Middle Eastern man\n",
       "3       1        3.45    Native American woman"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "term_debug(\"crazy\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "2dea6365-12cf-41c2-9d9f-ff7bb8ca739a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Counts</th>\n",
       "      <th>Percentage</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>12</td>\n",
       "      <td>11.43</td>\n",
       "      <td>South Asian man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>11</td>\n",
       "      <td>10.48</td>\n",
       "      <td>African man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>11</td>\n",
       "      <td>10.48</td>\n",
       "      <td>Asian woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10</td>\n",
       "      <td>9.52</td>\n",
       "      <td>Asian man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10</td>\n",
       "      <td>9.52</td>\n",
       "      <td>African woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>8</td>\n",
       "      <td>7.62</td>\n",
       "      <td>Black woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>8</td>\n",
       "      <td>7.62</td>\n",
       "      <td>South Asian woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>6</td>\n",
       "      <td>5.71</td>\n",
       "      <td>Middle Eastern woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>6</td>\n",
       "      <td>5.71</td>\n",
       "      <td>White man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>6</td>\n",
       "      <td>5.71</td>\n",
       "      <td>Mexican woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>4</td>\n",
       "      <td>3.81</td>\n",
       "      <td>White woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>2.86</td>\n",
       "      <td>Asian non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2</td>\n",
       "      <td>1.90</td>\n",
       "      <td>Native American man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2</td>\n",
       "      <td>1.90</td>\n",
       "      <td>Native American woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2</td>\n",
       "      <td>1.90</td>\n",
       "      <td>Middle Eastern non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2</td>\n",
       "      <td>1.90</td>\n",
       "      <td>Mexican man</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2</td>\n",
       "      <td>1.90</td>\n",
       "      <td>Middle Eastern man</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Counts  Percentage                           Classes\n",
       "13      12       11.43                   South Asian man\n",
       "0       11       10.48                       African man\n",
       "4       11       10.48                       Asian woman\n",
       "2       10        9.52                         Asian man\n",
       "1       10        9.52                     African woman\n",
       "5        8        7.62                       Black woman\n",
       "14       8        7.62                 South Asian woman\n",
       "10       6        5.71              Middle Eastern woman\n",
       "15       6        5.71                         White man\n",
       "7        6        5.71                     Mexican woman\n",
       "16       4        3.81                       White woman\n",
       "3        3        2.86           Asian non-binary person\n",
       "11       2        1.90               Native American man\n",
       "12       2        1.90             Native American woman\n",
       "9        2        1.90  Middle Eastern non-binary person\n",
       "6        2        1.90                       Mexican man\n",
       "8        2        1.90                Middle Eastern man"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "term_debug(\"disease\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "3dc9f18a-ee92-4234-bc8d-97fdfdb44aa6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Counts</th>\n",
       "      <th>Percentage</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>33.33</td>\n",
       "      <td>Black non-binary person</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>33.33</td>\n",
       "      <td>Black woman</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>33.33</td>\n",
       "      <td>Native American non-binary person</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Counts  Percentage                            Classes\n",
       "0       1       33.33            Black non-binary person\n",
       "1       1       33.33                        Black woman\n",
       "2       1       33.33  Native American non-binary person"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "term_debug(\"aggressive\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2507f801-7d00-406c-bb18-670dc28f367c",
   "metadata": {},
   "source": [
    "# 5: lexicon"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "2a005704-4892-4382-8241-d09660445198",
   "metadata": {},
   "outputs": [],
   "source": [
    "from nltk.stem import PorterStemmer\n",
    "ps = PorterStemmer()\n",
    "\n",
    "harvard_inq = pd.read_csv(\"/dartfs-hpc/rc/lab/D/DobsonJ/lexicons/Harvard_Inquirer-inqtabs.txt\",sep='\\t',\n",
    "                 header=(0),\n",
    "                 dtype='string')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "2b58e488-836d-4cd5-97fb-d059bba2c69d",
   "metadata": {},
   "outputs": [],
   "source": [
    "addl_stop_words = [\"story\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "2e63ebfb-8233-49c0-b043-c909f4dd8123",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Using 182 categories from Harvard Inquirer\n"
     ]
    }
   ],
   "source": [
    "test_cols = ['Positiv', 'Negativ', 'Pstv', 'Affil', 'Ngtv', 'Hostile', 'Strong', 'Power', 'Weak', \n",
    "             'Submit', 'Active', 'Passive', 'Pleasur', 'Pain', 'Feel', 'Arousal', 'EMOT', 'Virtue',\n",
    "              'Vice', 'Ovrst', 'Undrst', 'Academ', 'Doctrin', 'Econ@', 'Exch', 'ECON', 'Exprsv',\n",
    "              'Legal', 'Milit', 'Polit@', 'POLIT', 'Relig', 'Role', 'COLL', 'Work', 'Ritual', 'SocRel',\n",
    "              'Race', 'Kin@', 'MALE', 'Female', 'Nonadlt', 'HU', 'ANI', 'PLACE', 'Social', 'Region',\n",
    "              'Route', 'Aquatic', 'Land', 'Sky', 'Object', 'Tool', 'Food', 'Vehicle', 'BldgPt', 'ComnObj',\n",
    "              'NatObj', 'BodyPt', 'ComForm', 'COM', 'Say', 'Need', 'Goal', 'Try', 'Means', 'Persist',\n",
    "              'Complet', 'Fail', 'NatrPro', 'Begin', 'Vary', 'Increas', 'Decreas', 'Finish', 'Stay',\n",
    "              'Rise', 'Exert', 'Fetch', 'Travel', 'Fall', 'Think', 'Know', 'Causal', 'Ought', 'Perceiv',\n",
    "              'Compare', 'Eval@', 'EVAL', 'Solve', 'Abs@', 'ABS', 'Quality', 'Quan', 'NUMB', 'ORD',\n",
    "              'CARD', 'FREQ', 'DIST', 'Time@', 'TIME', 'Space', 'POS', 'DIM', 'Rel', 'COLOR', 'Self',\n",
    "              'Our', 'You', 'Name', 'Yes', 'No', 'Negate', 'Intrj', 'IAV', 'DAV', 'SV', 'IPadj', 'IndAdj',\n",
    "              'PowGain', 'PowLoss', 'PowEnds', 'PowAren', 'PowCon', 'PowCoop', 'PowAuPt', 'PowPt', 'PowDoct',\n",
    "              'PowAuth', 'PowOth', 'PowTot', 'RcEthic', 'RcRelig', 'RcGain', 'RcLoss', 'RcEnds', 'RcTot',\n",
    "              'RspGain', 'RspLoss', 'RspOth', 'RspTot', 'AffGain', 'AffLoss', 'AffPt', 'AffOth', 'AffTot',\n",
    "              'WltPt', 'WltTran', 'WltOth', 'WltTot', 'WlbGain', 'WlbLoss', 'WlbPhys', 'WlbPsyc', 'WlbPt',\n",
    "              'WlbTot', 'EnlGain', 'EnlLoss', 'EnlEnds', 'EnlPt', 'EnlOth', 'EnlTot', 'SklAsth', 'SklPt',\n",
    "              'SklOth', 'SklTot', 'TrnGain', 'TrnLoss', 'TranLw', 'MeansLw', 'EndsLw', 'ArenaLw', 'PtLw',\n",
    "              'Nation', 'Anomie', 'NegAff', 'PosAff', 'SureLw', 'If', 'NotLw', 'TimeSpc', 'FormLw']\n",
    "print(\"Using {0} categories from Harvard Inquirer\".format(len(test_cols)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "f95cd0fc-35d7-4388-b03d-2efd1e85c48d",
   "metadata": {},
   "outputs": [],
   "source": [
    "def clean_list(category):\n",
    "    vw = harvard_inq[harvard_inq[category] != '<NA>']['Entry'].tolist()\n",
    "    # make lowercase\n",
    "    vw = [w.lower() for w in vw]\n",
    "    # remove alt defs\n",
    "    vw = list(set([w.split(\"#\")[0] for w in vw]))\n",
    "    return vw\n",
    "\n",
    "# for testing with smaller set of categories\n",
    "smaller_categories = ['Hostile', 'Strong', 'Power', 'Weak', 'Submit', 'Active',\n",
    "              'Passive', 'Pleasur', 'Pain', 'Feel', 'Arousal', 'EMOT',\n",
    "              'Virtue', 'Vice', 'Ovrst', 'Undrst']\n",
    "\n",
    "categories = test_cols\n",
    "\n",
    "# create lexicon from preprocessed categories\n",
    "harvard_lex = dict()\n",
    "for cat in categories:\n",
    "    harvard_lex[cat] = clean_list(cat)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "ece38c12-8c1f-4c0a-9fe1-c30bf4ec6cb9",
   "metadata": {},
   "outputs": [],
   "source": [
    "# function to score texts\n",
    "def score_text(text):\n",
    "    scores = dict()\n",
    "    tokens = word_tokenize(text)\n",
    "    itc = len(tokens)\n",
    "    tokens = [t.lower() for t in tokens]\n",
    "    tokens = [t for t in tokens if t not in addl_stop_words]\n",
    "    tokens += [ps.stem(t) for t in tokens]\n",
    "    tokens = set(tokens)\n",
    "    tc = len(tokens)\n",
    "    for cat in harvard_lex.keys():\n",
    "        if tc == 0:\n",
    "            scores[cat] = 0\n",
    "        else:\n",
    "            scores[cat] = len([t for t in tokens if t in harvard_lex[cat]]) / itc\n",
    "    return scores\n",
    "\n",
    "def score_text_verbose(text,cat):\n",
    "    scores = dict()\n",
    "    tokens = word_tokenize(text)\n",
    "    itc = len(tokens)\n",
    "    tokens = [t.lower() for t in tokens]\n",
    "    tokens = [t for t in tokens if t not in addl_stop_words]\n",
    "    tokens += [ps.stem(t) for t in tokens]\n",
    "    tokens = set(tokens)\n",
    "    tc = len(tokens)\n",
    "    scores[cat] = len([t for t in tokens if t in harvard_lex[cat]]) / itc\n",
    "    tagged = [t for t in tokens if t in harvard_lex[cat]]\n",
    "    return scores, tagged"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "becc0f8b-7529-4663-a21e-79ca175b90c5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Positiv': 0.05569620253164557,\n",
       " 'Negativ': 0.035443037974683546,\n",
       " 'Pstv': 0.053164556962025315,\n",
       " 'Affil': 0.030379746835443037,\n",
       " 'Ngtv': 0.035443037974683546,\n",
       " 'Hostile': 0.035443037974683546,\n",
       " 'Strong': 0.05063291139240506,\n",
       " 'Power': 0.015189873417721518,\n",
       " 'Weak': 0.027848101265822784,\n",
       " 'Submit': 0.020253164556962026,\n",
       " 'Active': 0.07341772151898734,\n",
       " 'Passive': 0.05822784810126582,\n",
       " 'Pleasur': 0.005063291139240506,\n",
       " 'Pain': 0.005063291139240506,\n",
       " 'Feel': 0.0,\n",
       " 'Arousal': 0.012658227848101266,\n",
       " 'EMOT': 0.010126582278481013,\n",
       " 'Virtue': 0.02278481012658228,\n",
       " 'Vice': 0.005063291139240506,\n",
       " 'Ovrst': 0.03291139240506329,\n",
       " 'Undrst': 0.027848101265822784,\n",
       " 'Academ': 0.005063291139240506,\n",
       " 'Doctrin': 0.005063291139240506,\n",
       " 'Econ@': 0.015189873417721518,\n",
       " 'Exch': 0.005063291139240506,\n",
       " 'ECON': 0.002531645569620253,\n",
       " 'Exprsv': 0.005063291139240506,\n",
       " 'Legal': 0.007594936708860759,\n",
       " 'Milit': 0.002531645569620253,\n",
       " 'Polit@': 0.002531645569620253,\n",
       " 'POLIT': 0.007594936708860759,\n",
       " 'Relig': 0.0,\n",
       " 'Role': 0.02278481012658228,\n",
       " 'COLL': 0.007594936708860759,\n",
       " 'Work': 0.02531645569620253,\n",
       " 'Ritual': 0.005063291139240506,\n",
       " 'SocRel': 0.027848101265822784,\n",
       " 'Race': 0.0,\n",
       " 'Kin@': 0.002531645569620253,\n",
       " 'MALE': 0.012658227848101266,\n",
       " 'Female': 0.007594936708860759,\n",
       " 'Nonadlt': 0.002531645569620253,\n",
       " 'HU': 0.02531645569620253,\n",
       " 'ANI': 0.0,\n",
       " 'PLACE': 0.012658227848101266,\n",
       " 'Social': 0.002531645569620253,\n",
       " 'Region': 0.0,\n",
       " 'Route': 0.002531645569620253,\n",
       " 'Aquatic': 0.002531645569620253,\n",
       " 'Land': 0.005063291139240506,\n",
       " 'Sky': 0.0,\n",
       " 'Object': 0.03291139240506329,\n",
       " 'Tool': 0.012658227848101266,\n",
       " 'Food': 0.005063291139240506,\n",
       " 'Vehicle': 0.0,\n",
       " 'BldgPt': 0.0,\n",
       " 'ComnObj': 0.005063291139240506,\n",
       " 'NatObj': 0.007594936708860759,\n",
       " 'BodyPt': 0.012658227848101266,\n",
       " 'ComForm': 0.043037974683544304,\n",
       " 'COM': 0.03291139240506329,\n",
       " 'Say': 0.002531645569620253,\n",
       " 'Need': 0.007594936708860759,\n",
       " 'Goal': 0.002531645569620253,\n",
       " 'Try': 0.005063291139240506,\n",
       " 'Means': 0.010126582278481013,\n",
       " 'Persist': 0.0,\n",
       " 'Complet': 0.010126582278481013,\n",
       " 'Fail': 0.002531645569620253,\n",
       " 'NatrPro': 0.007594936708860759,\n",
       " 'Begin': 0.0,\n",
       " 'Vary': 0.007594936708860759,\n",
       " 'Increas': 0.0,\n",
       " 'Decreas': 0.0,\n",
       " 'Finish': 0.002531645569620253,\n",
       " 'Stay': 0.012658227848101266,\n",
       " 'Rise': 0.002531645569620253,\n",
       " 'Exert': 0.007594936708860759,\n",
       " 'Fetch': 0.002531645569620253,\n",
       " 'Travel': 0.02278481012658228,\n",
       " 'Fall': 0.0,\n",
       " 'Think': 0.0,\n",
       " 'Know': 0.015189873417721518,\n",
       " 'Causal': 0.005063291139240506,\n",
       " 'Ought': 0.0,\n",
       " 'Perceiv': 0.015189873417721518,\n",
       " 'Compare': 0.002531645569620253,\n",
       " 'Eval@': 0.0,\n",
       " 'EVAL': 0.005063291139240506,\n",
       " 'Solve': 0.020253164556962026,\n",
       " 'Abs@': 0.010126582278481013,\n",
       " 'ABS': 0.02278481012658228,\n",
       " 'Quality': 0.017721518987341773,\n",
       " 'Quan': 0.03291139240506329,\n",
       " 'NUMB': 0.002531645569620253,\n",
       " 'ORD': 0.002531645569620253,\n",
       " 'CARD': 0.0,\n",
       " 'FREQ': 0.005063291139240506,\n",
       " 'DIST': 0.002531645569620253,\n",
       " 'Time@': 0.02531645569620253,\n",
       " 'TIME': 0.010126582278481013,\n",
       " 'Space': 0.0379746835443038,\n",
       " 'POS': 0.002531645569620253,\n",
       " 'DIM': 0.005063291139240506,\n",
       " 'Rel': 0.010126582278481013,\n",
       " 'COLOR': 0.0,\n",
       " 'Self': 0.002531645569620253,\n",
       " 'Our': 0.002531645569620253,\n",
       " 'You': 0.002531645569620253,\n",
       " 'Name': 0.0,\n",
       " 'Yes': 0.007594936708860759,\n",
       " 'No': 0.002531645569620253,\n",
       " 'Negate': 0.007594936708860759,\n",
       " 'Intrj': 0.015189873417721518,\n",
       " 'IAV': 0.09873417721518987,\n",
       " 'DAV': 0.07088607594936709,\n",
       " 'SV': 0.030379746835443037,\n",
       " 'IPadj': 0.0,\n",
       " 'IndAdj': 0.0,\n",
       " 'PowGain': 0.007594936708860759,\n",
       " 'PowLoss': 0.007594936708860759,\n",
       " 'PowEnds': 0.0,\n",
       " 'PowAren': 0.0,\n",
       " 'PowCon': 0.010126582278481013,\n",
       " 'PowCoop': 0.002531645569620253,\n",
       " 'PowAuPt': 0.005063291139240506,\n",
       " 'PowPt': 0.0,\n",
       " 'PowDoct': 0.002531645569620253,\n",
       " 'PowAuth': 0.002531645569620253,\n",
       " 'PowOth': 0.007594936708860759,\n",
       " 'PowTot': 0.03291139240506329,\n",
       " 'RcEthic': 0.010126582278481013,\n",
       " 'RcRelig': 0.0,\n",
       " 'RcGain': 0.005063291139240506,\n",
       " 'RcLoss': 0.0,\n",
       " 'RcEnds': 0.0,\n",
       " 'RcTot': 0.015189873417721518,\n",
       " 'RspGain': 0.0,\n",
       " 'RspLoss': 0.0,\n",
       " 'RspOth': 0.002531645569620253,\n",
       " 'RspTot': 0.002531645569620253,\n",
       " 'AffGain': 0.002531645569620253,\n",
       " 'AffLoss': 0.002531645569620253,\n",
       " 'AffPt': 0.002531645569620253,\n",
       " 'AffOth': 0.002531645569620253,\n",
       " 'AffTot': 0.010126582278481013,\n",
       " 'WltPt': 0.0,\n",
       " 'WltTran': 0.0,\n",
       " 'WltOth': 0.005063291139240506,\n",
       " 'WltTot': 0.005063291139240506,\n",
       " 'WlbGain': 0.002531645569620253,\n",
       " 'WlbLoss': 0.002531645569620253,\n",
       " 'WlbPhys': 0.015189873417721518,\n",
       " 'WlbPsyc': 0.0,\n",
       " 'WlbPt': 0.002531645569620253,\n",
       " 'WlbTot': 0.02278481012658228,\n",
       " 'EnlGain': 0.012658227848101266,\n",
       " 'EnlLoss': 0.0,\n",
       " 'EnlEnds': 0.002531645569620253,\n",
       " 'EnlPt': 0.0,\n",
       " 'EnlOth': 0.020253164556962026,\n",
       " 'EnlTot': 0.02531645569620253,\n",
       " 'SklAsth': 0.002531645569620253,\n",
       " 'SklPt': 0.007594936708860759,\n",
       " 'SklOth': 0.005063291139240506,\n",
       " 'SklTot': 0.015189873417721518,\n",
       " 'TrnGain': 0.012658227848101266,\n",
       " 'TrnLoss': 0.005063291139240506,\n",
       " 'TranLw': 0.017721518987341773,\n",
       " 'MeansLw': 0.005063291139240506,\n",
       " 'EndsLw': 0.02531645569620253,\n",
       " 'ArenaLw': 0.002531645569620253,\n",
       " 'PtLw': 0.002531645569620253,\n",
       " 'Nation': 0.0,\n",
       " 'Anomie': 0.0,\n",
       " 'NegAff': 0.005063291139240506,\n",
       " 'PosAff': 0.010126582278481013,\n",
       " 'SureLw': 0.015189873417721518,\n",
       " 'If': 0.015189873417721518,\n",
       " 'NotLw': 0.005063291139240506,\n",
       " 'TimeSpc': 0.043037974683544304,\n",
       " 'FormLw': 0.03291139240506329}"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "score_text([r for r in stories['response'].tolist()][0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "91d3cf63-00ac-4453-886a-a2b728a923d6",
   "metadata": {},
   "outputs": [],
   "source": [
    "scores = []\n",
    "for r in stories['response']:\n",
    "    if isinstance(r, str):\n",
    "        score = score_text(r)\n",
    "        scores.append(score)\n",
    "        \"here1\"\n",
    "    else:\n",
    "        print(\"here\")\n",
    "        score = \"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "2b1b21ef-c3a0-482a-ab51-3785c7dd4e5f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# create dataframe\n",
    "df = pd.DataFrame(scores)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "4f785475-5edd-4c27-8129-87d0dee0aec7",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['identity'] = stories['identity']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "20832042-c53d-4055-95b7-a4f636e2008e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Hostile</th>\n",
       "      <th>Strong</th>\n",
       "      <th>Power</th>\n",
       "      <th>Weak</th>\n",
       "      <th>Submit</th>\n",
       "      <th>Active</th>\n",
       "      <th>Passive</th>\n",
       "      <th>Pleasur</th>\n",
       "      <th>Pain</th>\n",
       "      <th>Feel</th>\n",
       "      <th>Arousal</th>\n",
       "      <th>EMOT</th>\n",
       "      <th>Virtue</th>\n",
       "      <th>Vice</th>\n",
       "      <th>Ovrst</th>\n",
       "      <th>Undrst</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>identity</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>African</th>\n",
       "      <td>0.020191</td>\n",
       "      <td>0.083724</td>\n",
       "      <td>0.032276</td>\n",
       "      <td>0.021255</td>\n",
       "      <td>0.012517</td>\n",
       "      <td>0.087378</td>\n",
       "      <td>0.052388</td>\n",
       "      <td>0.006934</td>\n",
       "      <td>0.003597</td>\n",
       "      <td>0.000123</td>\n",
       "      <td>0.011242</td>\n",
       "      <td>0.014645</td>\n",
       "      <td>0.033673</td>\n",
       "      <td>0.012249</td>\n",
       "      <td>0.042266</td>\n",
       "      <td>0.026783</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Asian</th>\n",
       "      <td>0.017594</td>\n",
       "      <td>0.080659</td>\n",
       "      <td>0.029286</td>\n",
       "      <td>0.023071</td>\n",
       "      <td>0.013944</td>\n",
       "      <td>0.084420</td>\n",
       "      <td>0.056050</td>\n",
       "      <td>0.008755</td>\n",
       "      <td>0.004021</td>\n",
       "      <td>0.000247</td>\n",
       "      <td>0.014070</td>\n",
       "      <td>0.016372</td>\n",
       "      <td>0.037999</td>\n",
       "      <td>0.011355</td>\n",
       "      <td>0.041524</td>\n",
       "      <td>0.027091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Black</th>\n",
       "      <td>0.020842</td>\n",
       "      <td>0.086849</td>\n",
       "      <td>0.032545</td>\n",
       "      <td>0.021162</td>\n",
       "      <td>0.014117</td>\n",
       "      <td>0.090660</td>\n",
       "      <td>0.054486</td>\n",
       "      <td>0.006215</td>\n",
       "      <td>0.004495</td>\n",
       "      <td>0.000231</td>\n",
       "      <td>0.013519</td>\n",
       "      <td>0.014747</td>\n",
       "      <td>0.035405</td>\n",
       "      <td>0.012617</td>\n",
       "      <td>0.041449</td>\n",
       "      <td>0.027147</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mexican</th>\n",
       "      <td>0.019865</td>\n",
       "      <td>0.080292</td>\n",
       "      <td>0.029984</td>\n",
       "      <td>0.022530</td>\n",
       "      <td>0.012982</td>\n",
       "      <td>0.087066</td>\n",
       "      <td>0.055435</td>\n",
       "      <td>0.008516</td>\n",
       "      <td>0.004194</td>\n",
       "      <td>0.000164</td>\n",
       "      <td>0.012101</td>\n",
       "      <td>0.016045</td>\n",
       "      <td>0.032985</td>\n",
       "      <td>0.011088</td>\n",
       "      <td>0.039979</td>\n",
       "      <td>0.028276</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Middle Eastern</th>\n",
       "      <td>0.019118</td>\n",
       "      <td>0.079994</td>\n",
       "      <td>0.029434</td>\n",
       "      <td>0.022175</td>\n",
       "      <td>0.013268</td>\n",
       "      <td>0.084481</td>\n",
       "      <td>0.055841</td>\n",
       "      <td>0.007829</td>\n",
       "      <td>0.003441</td>\n",
       "      <td>0.000262</td>\n",
       "      <td>0.012482</td>\n",
       "      <td>0.015303</td>\n",
       "      <td>0.034816</td>\n",
       "      <td>0.011516</td>\n",
       "      <td>0.039952</td>\n",
       "      <td>0.025910</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Native American</th>\n",
       "      <td>0.020795</td>\n",
       "      <td>0.076880</td>\n",
       "      <td>0.030820</td>\n",
       "      <td>0.019451</td>\n",
       "      <td>0.012870</td>\n",
       "      <td>0.086658</td>\n",
       "      <td>0.051028</td>\n",
       "      <td>0.007245</td>\n",
       "      <td>0.003670</td>\n",
       "      <td>0.000292</td>\n",
       "      <td>0.012484</td>\n",
       "      <td>0.014583</td>\n",
       "      <td>0.037693</td>\n",
       "      <td>0.010334</td>\n",
       "      <td>0.036604</td>\n",
       "      <td>0.022498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>South Asian</th>\n",
       "      <td>0.017087</td>\n",
       "      <td>0.080185</td>\n",
       "      <td>0.028772</td>\n",
       "      <td>0.021494</td>\n",
       "      <td>0.013535</td>\n",
       "      <td>0.084977</td>\n",
       "      <td>0.055209</td>\n",
       "      <td>0.008061</td>\n",
       "      <td>0.004035</td>\n",
       "      <td>0.000224</td>\n",
       "      <td>0.013186</td>\n",
       "      <td>0.016294</td>\n",
       "      <td>0.036015</td>\n",
       "      <td>0.010840</td>\n",
       "      <td>0.040606</td>\n",
       "      <td>0.026684</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>White</th>\n",
       "      <td>0.020415</td>\n",
       "      <td>0.075961</td>\n",
       "      <td>0.027478</td>\n",
       "      <td>0.021813</td>\n",
       "      <td>0.014240</td>\n",
       "      <td>0.086765</td>\n",
       "      <td>0.057489</td>\n",
       "      <td>0.008560</td>\n",
       "      <td>0.003668</td>\n",
       "      <td>0.000231</td>\n",
       "      <td>0.013985</td>\n",
       "      <td>0.016733</td>\n",
       "      <td>0.033767</td>\n",
       "      <td>0.010569</td>\n",
       "      <td>0.040266</td>\n",
       "      <td>0.028337</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Hostile    Strong     Power      Weak    Submit    Active  \\\n",
       "identity                                                                      \n",
       "African          0.020191  0.083724  0.032276  0.021255  0.012517  0.087378   \n",
       "Asian            0.017594  0.080659  0.029286  0.023071  0.013944  0.084420   \n",
       "Black            0.020842  0.086849  0.032545  0.021162  0.014117  0.090660   \n",
       "Mexican          0.019865  0.080292  0.029984  0.022530  0.012982  0.087066   \n",
       "Middle Eastern   0.019118  0.079994  0.029434  0.022175  0.013268  0.084481   \n",
       "Native American  0.020795  0.076880  0.030820  0.019451  0.012870  0.086658   \n",
       "South Asian      0.017087  0.080185  0.028772  0.021494  0.013535  0.084977   \n",
       "White            0.020415  0.075961  0.027478  0.021813  0.014240  0.086765   \n",
       "\n",
       "                  Passive   Pleasur      Pain      Feel   Arousal      EMOT  \\\n",
       "identity                                                                      \n",
       "African          0.052388  0.006934  0.003597  0.000123  0.011242  0.014645   \n",
       "Asian            0.056050  0.008755  0.004021  0.000247  0.014070  0.016372   \n",
       "Black            0.054486  0.006215  0.004495  0.000231  0.013519  0.014747   \n",
       "Mexican          0.055435  0.008516  0.004194  0.000164  0.012101  0.016045   \n",
       "Middle Eastern   0.055841  0.007829  0.003441  0.000262  0.012482  0.015303   \n",
       "Native American  0.051028  0.007245  0.003670  0.000292  0.012484  0.014583   \n",
       "South Asian      0.055209  0.008061  0.004035  0.000224  0.013186  0.016294   \n",
       "White            0.057489  0.008560  0.003668  0.000231  0.013985  0.016733   \n",
       "\n",
       "                   Virtue      Vice     Ovrst    Undrst  \n",
       "identity                                                 \n",
       "African          0.033673  0.012249  0.042266  0.026783  \n",
       "Asian            0.037999  0.011355  0.041524  0.027091  \n",
       "Black            0.035405  0.012617  0.041449  0.027147  \n",
       "Mexican          0.032985  0.011088  0.039979  0.028276  \n",
       "Middle Eastern   0.034816  0.011516  0.039952  0.025910  \n",
       "Native American  0.037693  0.010334  0.036604  0.022498  \n",
       "South Asian      0.036015  0.010840  0.040606  0.026684  \n",
       "White            0.033767  0.010569  0.040266  0.028337  "
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby(by=\"identity\").mean()[smaller_categories]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "34b7ff06-ab54-4ddd-9646-87b3d2e4401c",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
